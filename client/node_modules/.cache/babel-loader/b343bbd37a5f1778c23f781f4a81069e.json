{"ast":null,"code":"import _classCallCheck from \"/Users/davidtrafford/Documents/Coding/JavaScript/React/HealthInfo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidtrafford/Documents/Coding/JavaScript/React/HealthInfo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidtrafford/Documents/Coding/JavaScript/React/HealthInfo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidtrafford/Documents/Coding/JavaScript/React/HealthInfo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidtrafford/Documents/Coding/JavaScript/React/HealthInfo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidtrafford/Documents/Coding/JavaScript/React/HealthInfo/client/src/views/Results/PatientList.js\";\nimport React, { Component } from \"react\";\nimport \"./Results.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nvar PatientList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PatientList, _Component);\n\n  function PatientList() {\n    _classCallCheck(this, PatientList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PatientList).apply(this, arguments));\n  }\n\n  _createClass(PatientList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PaperSheet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ViewResultsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"patientTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"patientName_Header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Patient Name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })), this.props.patients.map(function (patient) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, patient.firstName, \" \", patient.lastName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/view_results\",\n            state: {\n              patientId: patient._id,\n              firstName: patient.firstName,\n              lastName: patient.lastName\n            }\n          },\n          className: \"patientListButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"patientListButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"View Results\"))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/add_results\",\n            state: {\n              patientId: patient._id,\n              firstName: patient.firstName,\n              lastName: patient.lastName,\n              doctorName: patient.doctorName\n            }\n          },\n          className: \"patientListButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"patientListButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Add Results\"))));\n      }))));\n    }\n  }]);\n\n  return PatientList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    patients: state.patientList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getPatients: function getPatients() {\n      dispatch(UserStore.getPatients());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientList);","map":{"version":3,"sources":["/Users/davidtrafford/Documents/Coding/JavaScript/React/HealthInfo/client/src/views/Results/PatientList.js"],"names":["React","Component","connect","UserStore","PaperSheet","Button","BrowserRouter","Router","Switch","Route","Link","PatientList","props","patients","map","patient","firstName","lastName","pathname","state","patientId","_id","doctorName","mapStateToProps","patientList","mapDispatchToProps","dispatch","getPatients"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Results.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass PatientList extends Component {\n  render() {\n    return (\n      <PaperSheet>\n        <div className=\"ViewResultsContainer\">\n          <table className=\"patientTable\">\n            <tr>\n              <td className=\"patientName_Header\">Patient Name</td>\n              <td></td>\n              <td></td>\n            </tr>\n            {this.props.patients.map(patient => (\n              <tr>\n                <td>\n                  {patient.firstName} {patient.lastName}\n                </td>\n                <td>\n                  <Link\n                    to={{\n                      pathname: \"/view_results\",\n                      state: {\n                        patientId: patient._id,\n                        firstName: patient.firstName,\n                        lastName: patient.lastName\n                      }\n                    }}\n                    className=\"patientListButton\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\"patientListButton\"\n                    >\n                      View Results\n                    </Button>\n                  </Link>\n                </td>\n                <td>\n                  <Link\n                    to={{\n                      pathname: \"/add_results\",\n                      state: {\n                        patientId: patient._id,\n                        firstName: patient.firstName,\n                        lastName: patient.lastName,\n                        doctorName: patient.doctorName\n                      }\n                    }}\n                    className=\"patientListButton\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\"patientListButton\"\n                    >\n                      Add Results\n                    </Button>\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </table>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    patients: state.patientList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPatients: () => {\n      dispatch(UserStore.getPatients());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientList);\n"]},"metadata":{},"sourceType":"module"}