{"ast":null,"code":"import _classCallCheck from \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/client/src/views/Symptoms/Symptoms.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Symptoms.css\";\nimport { connect } from 'react-redux';\nimport UserStore from \"../../store/user/UserStore\";\nimport Chips from '../../components/UI/Chips';\nimport PaperSheet from \"../../components/UI/Paper\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar Symptoms =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Symptoms, _React$Component);\n\n  function Symptoms() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Symptoms);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Symptoms)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      headache: null,\n      fever: null\n    };\n\n    _this.onEmailChange = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.onPasswordChange = function (event) {\n      _this.setState({\n        password: event.target.value\n      });\n    };\n\n    _this.onSubmit = function (event) {// const patient = {\n      //   email: this.state.email,\n      //   password: this.state.password,\n      // };\n      // console.log(patient);\n      // this.props.patientLogIn(patient);\n    };\n\n    return _this;\n  }\n\n  _createClass(Symptoms, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// if(this.props.shouldRedirect) {\n      //   return <Redirect to=\"/patient\" \n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(PaperSheet, {\n        className: \"symptomCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"symptomContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"symptomTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Symptom Checker\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Chips, {\n        label: \"Headache\",\n        click: this.handleHeadAche(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onSubmit,\n        type: \"button\",\n        class: \"submitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"SUBMIT\"))));\n    }\n  }]);\n\n  return Symptoms;\n}(React.Component);\n\nSymptoms.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n}; // export default withStyles(styles)(PatientLogin);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Symptoms));","map":{"version":3,"sources":["/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/client/src/views/Symptoms/Symptoms.js"],"names":["React","PropTypes","classNames","withStyles","TextField","connect","UserStore","Chips","PaperSheet","BrowserRouter","Router","Switch","Route","Link","Redirect","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","Symptoms","state","headache","fever","onEmailChange","event","setState","email","target","value","onPasswordChange","password","onSubmit","classes","props","handleHeadAche","Component","propTypes","object","isRequired","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Symptoms.css\";\nimport {connect} from 'react-redux';\nimport UserStore from \"../../store/user/UserStore\";\nimport Chips from '../../components/UI/Chips';\nimport PaperSheet from \"../../components/UI/Paper\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass Symptoms extends React.Component {\n  state = {\n    headache: null,\n    fever: null\n  };\n\n  componentDidUpdate() {\n    // if(this.props.shouldRedirect) {\n    //   return <Redirect to=\"/patient\" \n    // }\n  }\n  onEmailChange = event => {\n    this.setState({\n      email: event.target.value\n    });\n  };\n  onPasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n\n  onSubmit = event => {\n    // const patient = {\n    //   email: this.state.email,\n    //   password: this.state.password,\n    // };\n\n    // console.log(patient);\n\n    // this.props.patientLogIn(patient);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <PaperSheet className='symptomCard'>\n        <div className='symptomContainer'>\n          <h1 className='symptomTitle'>Symptom Checker</h1>\n          <hr />\n          <form className={classes.container} noValidate autoComplete='off'>\n            <Chips label=\"Headache\" click={this.handleHeadAche()} />\n            {/* <TextField\n              id='outlined-email-input'\n              label='Email'\n              className={classes.textField}\n              type='email'\n              name='email'\n              // autoComplete='email'\n              margin='normal'\n              variant='outlined'\n              fullWidth\n              onChange={e => this.onEmailChange(e)}\n            /> */}\n            <button onClick={this.onSubmit} type='button' class='submitButton'>\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nSymptoms.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  };\n};\n\n// export default withStyles(styles)(PatientLogin);\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Symptoms));\n"]},"metadata":{},"sourceType":"module"}