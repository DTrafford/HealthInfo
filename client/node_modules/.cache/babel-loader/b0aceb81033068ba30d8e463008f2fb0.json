{"ast":null,"code":"import _classCallCheck from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n///////////*****************//////// USERSTORE\nimport { apiUrl } from \"../../instances/instance\";\nimport { logIn, logOut, getPatients, createTip, getTips, deleteTip, addResults, getPatient, getConditions } from \"./function\";\nimport history from \"../../history\";\n\nvar UserStore = function UserStore() {\n  _classCallCheck(this, UserStore);\n};\n\nUserStore.patientRegister = function (patient) {\n  return function (dispatch) {\n    apiUrl.post(\"/patient/signup\", patient).then(function (patient) {\n      // dispatch(logIn(patient));\n      history.push(\"/login\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.employeeRegister = function (employee) {\n  return function (dispatch) {\n    apiUrl.post(\"/employee/signup\", employee).then(function (patient) {\n      // dispatch(logIn(employee));\n      history.push(\"/login\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.patientLogIn = function (patient) {\n  return function (dispatch) {\n    apiUrl.post(\"/patient/login\", patient).then(function (patient) {\n      dispatch(logIn(patient));\n      history.push(\"/patient\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.employeeLogIn = function (employee) {\n  return function (dispatch) {\n    apiUrl.post(\"/employee/login\", employee).then(function (employee) {\n      dispatch(logIn(employee));\n    }).then(function () {\n      apiUrl.get('/patient/patient_list').then(function (patients) {\n        dispatch(getPatients(patients));\n        history.push(\"/employee\");\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.createTip = function (tip) {\n  return function (dispatch) {\n    apiUrl.post(\"/tip\", tip).then(function (tip) {\n      dispatch(createTip(tip));\n      history.push(\"/employee\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.getTips = function () {\n  return function (dispatch) {\n    apiUrl.get('/tip').then(function (tips) {\n      dispatch(getTips(tips));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.createPost = function (post) {\n  return function (dispatch) {\n    apiUrl.post(\"/post\", post).then(function (tip) {\n      dispatch(createTip(tip));\n      history.push(\"/patient/discussion_board\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.getTips = function () {\n  return function (dispatch) {\n    apiUrl.get('/tip').then(function (tips) {\n      dispatch(getTips(tips));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.addResults = function (id, results) {\n  console.log(id);\n  return function (dispatch) {\n    apiUrl.put('/patient/' + id, results).then(function (response) {\n      history.push('patient_list');\n    });\n  };\n};\n\nUserStore.getPatient = function (id) {\n  return function (dispatch) {\n    apiUrl.get('/patient/' + id).then(function (patient) {\n      dispatch(getPatient(patient));\n    });\n  };\n};\n\nUserStore.getConditions = function (symptoms) {\n  var request = {\n    symptoms: symptoms\n  };\n  return function (dispatch) {\n    apiUrl.post('/condition', symptoms).then(function (conditions) {\n      dispatch(getConditions(conditions));\n    });\n  };\n};\n\nUserStore.deleteTip = function (tip) {\n  return function (dispatch) {\n    apiUrl.delete('/tip/' + tip._id).then(function (response) {\n      dispatch(deleteTip(tip));\n      history.push('/health_tips');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\n\nUserStore.logOut = function () {\n  return function (dispatch) {\n    dispatch(logOut());\n    history.push(\"/\");\n  };\n};\n\nexport { UserStore as default };","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/store/user/UserStore.js"],"names":["apiUrl","logIn","logOut","getPatients","createTip","getTips","deleteTip","addResults","getPatient","getConditions","history","UserStore","patientRegister","patient","dispatch","post","then","push","catch","err","console","log","employeeRegister","employee","patientLogIn","employeeLogIn","get","patients","tip","tips","createPost","id","results","put","response","symptoms","request","conditions","delete","_id"],"mappings":"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","sourcesContent":["///////////*****************//////// USERSTORE\n\nimport { apiUrl } from \"../../instances/instance\";\nimport { logIn, logOut, getPatients, createTip, getTips, deleteTip, addResults, getPatient, getConditions } from \"./function\";\nimport history from \"../../history\";\nexport default class UserStore {\n  // pull data /////\n  static patientRegister = patient => {\n    return dispatch => {\n      apiUrl\n        .post(\"/patient/signup\", patient)\n        .then(patient => {\n          // dispatch(logIn(patient));\n          history.push(\"/login\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static employeeRegister = employee => {\n    return dispatch => {\n      apiUrl\n        .post(\"/employee/signup\", employee)\n        .then(patient => {\n          // dispatch(logIn(employee));\n          history.push(\"/login\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static patientLogIn = patient => {\n    return dispatch => {\n      apiUrl\n        .post(\"/patient/login\", patient)\n        .then(patient => {\n          dispatch(logIn(patient));\n          history.push(\"/patient\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static employeeLogIn = employee => {\n    return dispatch => {\n      apiUrl\n        .post(\"/employee/login\", employee)\n        .then(employee => {\n          dispatch(logIn(employee));\n        })\n        .then(() => {\n          apiUrl.get('/patient/patient_list')\n          .then(patients => {\n            dispatch(getPatients(patients));\n            history.push(\"/employee\");\n          })\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n    };\n  };\n  static createTip = (tip) => {\n    return dispatch => {\n      apiUrl\n        .post(\"/tip\", tip)\n        .then(tip => {\n          dispatch(createTip(tip));\n          history.push(\"/employee\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static getTips = () => {\n    return dispatch => {\n      apiUrl.get('/tip')\n      .then(tips => {\n        dispatch(getTips(tips))\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n  static createPost = (post) => {\n    return dispatch => {\n      apiUrl\n        .post(\"/post\", post)\n        .then(tip => {\n          dispatch(createTip(tip));\n          history.push(\"/patient/discussion_board\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static getTips = () => {\n    return dispatch => {\n      apiUrl.get('/tip')\n      .then(tips => {\n        dispatch(getTips(tips))\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n  static addResults = (id, results) => {\n    console.log(id);\n    return dispatch => {\n      apiUrl.put('/patient/' + id, results)\n      .then(response => {\n        history.push('patient_list');\n      })\n    }\n  }\n  static getPatient = (id) => {\n    return dispatch => {\n      apiUrl.get('/patient/' + id)\n      .then(patient => {\n        dispatch(getPatient(patient));\n      })\n    }\n  }\n  static getConditions = (symptoms) => {\n    const request = {\n      symptoms: symptoms\n    }\n    return dispatch => {\n      apiUrl.post('/condition', symptoms)\n      .then(conditions => {\n        dispatch(getConditions(conditions));\n      })\n    }\n  }\n  static deleteTip = (tip) => {\n    return dispatch => {\n      apiUrl.delete('/tip/' + tip._id)\n      .then(response => {\n        dispatch(deleteTip(tip))\n        history.push('/health_tips');\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n  static logOut = () => {\n    return dispatch => {\n      dispatch(logOut());\n      history.push(\"/\");\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}