{"ast":null,"code":"import _classCallCheck from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/views/DiscussionBoard/CreatePost.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./DiscussionBoard.css\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport Jimp from \"jimp\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreatePost, _Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: \"\",\n      content: \"\",\n      image: null,\n      creatorId: \"\",\n      creatorName: _this.props.firstName + ' ' + _this.props.lastName,\n      imagePath: null,\n      replies: []\n    };\n\n    _this.componentDidMount = function () {\n      console.log('USER = ', _this.props.user);\n    };\n\n    _this.onTitleChange = function (event) {\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    _this.onContentChange = function (event) {\n      _this.setState({\n        content: event.target.value\n      });\n    };\n\n    _this.onImageChange = function (event) {\n      event.persist();\n\n      if (event.target.files && event.target.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var imageBlob = new Blob([event.target.files[0]], {\n            type: event.target.files[0].type\n          });\n          var src = URL.createObjectURL(imageBlob);\n          Jimp.read(src, function (err, image) {\n            return image.resize(256, 256).quality(60);\n          });\n\n          _this.setState({\n            image: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(event.target.files[0]);\n      } // this.setState({ image: event.target.files[0] });\n      // this.props.updateImage(event.target.files[0]);\n\n    };\n\n    _this.onImageChange2 = function () {\n      _this.inputElement.click();\n    };\n\n    _this.onSubmit = function () {\n      var newPost = {\n        title: _this.state.title,\n        content: _this.state.content,\n        image: _this.state.image,\n        userId: _this.props.user.userId,\n        creatorName: _this.props.user.firstName + ' ' + _this.props.user.lastName,\n        // imagePath: null,\n        replies: []\n      };\n      console.log('New Post = ', newPost);\n\n      _this.props.createPost(newPost, _this.props.user);\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(PaperSheet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"addTipTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Create New Post\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        enctype: \"multipart/form-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-title-input\",\n        label: \"Title\",\n        className: classes.textField,\n        type: \"text\",\n        name: \"title\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: function onChange(e) {\n          return _this2.onTitleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-content-flexible\",\n        label: \"Post Message\",\n        multiline: true,\n        rowsMax: \"6\",\n        onChange: function onChange(e) {\n          return _this2.onContentChange(e);\n        },\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), this.state.image ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.image,\n        alt: \"for health tip post\",\n        className: \"tip_Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })) : null, React.createElement(\"label\", {\n        for: \"image_picker\",\n        className: \"imagePicker_Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"imagePicker_Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"SELECT IMAGE\")), React.createElement(\"input\", {\n        ref: function ref(input) {\n          return _this2.inputElement = input;\n        },\n        type: \"file\",\n        onChange: function onChange(e) {\n          return _this2.onImageChange(e);\n        } // onChange={this.onImageChange.bind(this)}\n        ,\n        className: \"filetype\",\n        id: \"image_picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onSubmit,\n        type: \"button\",\n        class: \"submitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"SUBMIT\"))));\n    }\n  }]);\n\n  return CreatePost;\n}(Component);\n\nCreatePost.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createPost: function createPost(post, user) {\n      dispatch(UserStore.createPost(post, user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CreatePost));","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/views/DiscussionBoard/CreatePost.js"],"names":["React","Component","PropTypes","classNames","withStyles","MenuItem","TextField","PaperSheet","connect","UserStore","Jimp","BrowserRouter","Router","Switch","Route","Link","Redirect","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","CreatePost","state","title","content","image","creatorId","creatorName","props","firstName","lastName","imagePath","replies","componentDidMount","console","log","user","onTitleChange","event","setState","target","value","onContentChange","onImageChange","persist","files","reader","FileReader","onload","e","imageBlob","Blob","type","src","URL","createObjectURL","read","err","resize","quality","result","readAsDataURL","onImageChange2","inputElement","click","onSubmit","newPost","userId","createPost","classes","input","propTypes","object","isRequired","mapStateToProps","mapDispatchToProps","dispatch","post"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./DiscussionBoard.css\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport Jimp from \"jimp\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass CreatePost extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n    image: null,\n    creatorId: \"\",\n    creatorName: this.props.firstName + ' ' + this.props.lastName,\n    imagePath: null,\n    replies: []\n  };\n\n  componentDidMount = () => {\n    console.log('USER = ', this.props.user);\n  };\n\n  onTitleChange = event => {\n    this.setState({\n      title: event.target.value\n    });\n  };\n\n  onContentChange = event => {\n    this.setState({\n      content: event.target.value\n    });\n  };\n\n  onImageChange = event => {\n    event.persist();\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.onload = e => {\n        var imageBlob = new Blob([event.target.files[0]], {\n          type: event.target.files[0].type\n        });\n        var src = URL.createObjectURL(imageBlob);\n        Jimp.read(src, (err, image) => {\n          return image.resize(256, 256).quality(60);\n        });\n        this.setState({ image: e.target.result });\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n    // this.setState({ image: event.target.files[0] });\n    // this.props.updateImage(event.target.files[0]);\n  };\n  onImageChange2 = () => {\n    this.inputElement.click();\n  };\n\n  onSubmit = () => {\n    const newPost = {\n      title: this.state.title,\n      content: this.state.content,\n      image: this.state.image,\n      userId: this.props.user.userId,\n      creatorName: this.props.user.firstName + ' ' + this.props.user.lastName,\n      // imagePath: null,\n      replies: []\n\n    };\n    console.log('New Post = ', newPost);\n    this.props.createPost(newPost, this.props.user);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <PaperSheet>\n        <div>\n          <h1 className='addTipTitle'>Create New Post</h1>\n          <hr />\n          <form\n            className={classes.container}\n            noValidate\n            autoComplete='off'\n            enctype='multipart/form-data'>\n            <TextField\n              id='outlined-title-input'\n              label='Title'\n              className={classes.textField}\n              type='text'\n              name='title'\n              margin='normal'\n              variant='outlined'\n              fullWidth\n              onChange={e => this.onTitleChange(e)}\n            />\n            <TextField\n              id='outlined-content-flexible'\n              label='Post Message'\n              multiline\n              rowsMax='6'\n              onChange={e => this.onContentChange(e)}\n              className={classes.textField}\n              margin='normal'\n              variant='outlined'\n              fullWidth\n            />\n            {this.state.image ? (\n              <div>\n                <img\n                  src={this.state.image}\n                  alt='for health tip post'\n                  className='tip_Image'\n                />\n              </div>\n            ) : null}\n            <label for='image_picker' className='imagePicker_Button'>\n              <span className='imagePicker_Text'>SELECT IMAGE</span>\n            </label>\n            <input\n              ref={input => (this.inputElement = input)}\n              type='file'\n              onChange={e => this.onImageChange(e)}\n              // onChange={this.onImageChange.bind(this)}\n              className='filetype'\n              id='image_picker'\n            />\n            {/* <button onClick={this.onImageChange} type='button' class='submitButton'>\n              Pick Image\n            </button> */}\n            <button onClick={this.onSubmit} type='button' class='submitButton'>\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nCreatePost.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPost: (post, user) => {\n      dispatch(UserStore.createPost(post, user));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(CreatePost));\n"]},"metadata":{},"sourceType":"module"}