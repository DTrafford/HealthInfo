{"ast":null,"code":"import _classCallCheck from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/views/DiscussionBoard/DiscussionBoard.js\";\nimport React, { Component } from 'react';\nimport './DiscussionBoard.css';\nimport { connect } from 'react-redux';\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport Button from '@material-ui/core/Button';\nimport PostExpansionPanel from \"../../components/UI/PostExpansionPanel\";\nimport { stat } from \"fs\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nvar DiscussionBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DiscussionBoard, _Component);\n\n  function DiscussionBoard() {\n    var _this;\n\n    _classCallCheck(this, DiscussionBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DiscussionBoard).call(this));\n    _this.state = {\n      posts: null\n    };\n    return _this;\n  }\n\n  _createClass(DiscussionBoard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(PaperSheet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.userType === \"EM\" ? React.createElement(Link, {\n        to: '/add_tip',\n        className: \"addTip_Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Add Tip\")) : null, React.createElement(\"div\", {\n        className: \"ViewResultsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.posts ? this.props.posts.map(function (post) {\n        return React.createElement(PostExpansionPanel, {\n          title: post.title,\n          message: post.message,\n          delete: _this2.props.userId === post.creatorId ? function () {\n            return _this2.deleteTip(post);\n          } : null,\n          className: \"resultPanel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }) : React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"No Posts Yet!\")));\n    }\n  }]);\n\n  return DiscussionBoard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userType: state.userType,\n    health_tips: state.healthTips\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteTip: function deleteTip(id) {\n      dispatch(UserStore.deleteTip(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscussionBoard);","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/views/DiscussionBoard/DiscussionBoard.js"],"names":["React","Component","connect","UserStore","PaperSheet","Button","PostExpansionPanel","stat","BrowserRouter","Router","Switch","Route","Link","Redirect","DiscussionBoard","state","posts","props","userType","map","post","title","message","userId","creatorId","deleteTip","mapStateToProps","health_tips","healthTips","mapDispatchToProps","dispatch","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;;IAQMC,e;;;;;AACJ,6BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFY;AAKb;;;;6BACU;AAAA;;AACL,aACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKC,KAAL,CAAWC,QAAX,KAAwB,IAAxB,GACC,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,UAAV;AAAsB,QAAA,SAAS,EAAC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAhD,CADD,GAEE,IAJH,EAKA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWD,KAAX,GAAmB,KAAKC,KAAL,CAAWD,KAAX,CAAiBG,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAC3C,oBAAC,kBAAD;AAAoB,UAAA,KAAK,EAAEA,IAAI,CAACC,KAAhC;AAAuC,UAAA,OAAO,EAAED,IAAI,CAACE,OAArD;AAA8D,UAAA,MAAM,EAAE,MAAI,CAACL,KAAL,CAAWM,MAAX,KAAsBH,IAAI,CAACI,SAA3B,GAAuC;AAAA,mBAAM,MAAI,CAACC,SAAL,CAAeL,IAAf,CAAN;AAAA,WAAvC,GAAoE,IAA1I;AAAgJ,UAAA,SAAS,EAAC,aAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD2C;AAAA,OAAzB,CAAnB,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHP,CALA,CADJ;AAaH;;;;EArByBnB,S;;AAyB9B,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,CAAAX,KAAK,EAAI;AAC/B,SAAO;AACLG,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QADX;AAELS,IAAAA,WAAW,EAAEZ,KAAK,CAACa;AAFd,GAAP;AAID,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLL,IAAAA,SAAS,EAAE,mBAACM,EAAD,EAAQ;AACjBD,MAAAA,QAAQ,CAAC3B,SAAS,CAACsB,SAAV,CAAoBM,EAApB,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAe7B,OAAO,CACpBwB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbf,eAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './DiscussionBoard.css';\nimport {connect} from 'react-redux';\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport Button from '@material-ui/core/Button';\nimport PostExpansionPanel from \"../../components/UI/PostExpansionPanel\";\nimport { stat } from \"fs\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass DiscussionBoard extends Component {\n  constructor() {\n    super()\n    this.state = {\n      posts: null\n    }\n  }\n    render() {\n        return (\n            <PaperSheet>\n              {/* TODO: USE THIS FOR REDIRECT ON ALL PAGES IF NOT LOGGED IN */}\n            {this.props.userType === \"EM\" ? \n              <Link to={'/add_tip'} className=\"addTip_Button\"><Button variant=\"contained\" color=\"primary\">Add Tip</Button></Link>\n             : null}\n            <div className='ViewResultsContainer'>\n              {this.props.posts ? this.props.posts.map(post => (\n                <PostExpansionPanel title={post.title} message={post.message} delete={this.props.userId === post.creatorId ? () => this.deleteTip(post) : null} className=\"resultPanel\" />\n              )) : <h2>No Posts Yet!</h2>}\n            </div>\n          </PaperSheet>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.userType,\n    health_tips: state.healthTips\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTip: (id) => {\n      dispatch(UserStore.deleteTip(id));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscussionBoard);\n"]},"metadata":{},"sourceType":"module"}