{"ast":null,"code":"import _classCallCheck from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/ReplyCard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar ReplyCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReplyCard, _Component);\n\n  function ReplyCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReplyCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReplyCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      post: _this.props.post,\n      replyMessage: []\n    };\n\n    _this.onReplyChange = function (event) {\n      _this.setState({\n        replyMessage: event.target.value\n      });\n    };\n\n    _this.addReplyHandler = function () {};\n\n    return _this;\n  }\n\n  _createClass(ReplyCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"REPLIES = \", this.props.post.replies);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Card, {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          maxWidth: \"95%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-content-flexible\",\n        label: \"Post Message\",\n        multiline: true,\n        rowsMax: \"6\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: function onChange(e) {\n          return _this2.onReplyChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Submit Reply\")));\n    }\n  }]);\n\n  return ReplyCard;\n}(Component);\n\nReplyCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    submitReply: function submitReply(reply, user) {\n      dispatch(UserStore.createPost(reply, user));\n    },\n    getPosts: function getPosts() {\n      dispatch(UserStore.getPosts());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ReplyCard));","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/ReplyCard.js"],"names":["React","Component","PropTypes","makeStyles","Card","CardActions","CardContent","Button","Typography","TextField","connect","UserStore","withStyles","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","ReplyCard","state","post","props","replyMessage","onReplyChange","event","setState","target","value","addReplyHandler","console","log","replies","maxWidth","e","propTypes","classes","object","isRequired","mapStateToProps","user","mapDispatchToProps","dispatch","submitReply","reply","createPost","getPosts"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass ReplyCard extends Component {\n  componentDidMount() {\n    console.log(\"REPLIES = \", this.props.post.replies);\n  }\n  state = {\n    post: this.props.post,\n    replyMessage: []\n  };\n\n  onReplyChange = event => {\n    this.setState({\n      replyMessage: event.target.value\n    });\n  };\n\n  addReplyHandler = () => {};\n  render() {\n    return (\n      <Card\n        style={{ marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"95%\" }}\n      >\n        <CardContent>\n          <TextField\n            id=\"outlined-content-flexible\"\n            label=\"Post Message\"\n            multiline\n            rowsMax=\"6\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => this.onReplyChange(e)}\n          />\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" size=\"small\">\n            Submit Reply\n          </Button>\n          {/* <Button size=\"small\">Cancel</Button> */}\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nReplyCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitReply: (reply, user) => {\n      dispatch(UserStore.createPost(reply, user));\n    },\n    getPosts: () => {\n      dispatch(UserStore.getPosts());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ReplyCard));\n"]},"metadata":{},"sourceType":"module"}