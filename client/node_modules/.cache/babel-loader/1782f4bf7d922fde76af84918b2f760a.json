{"ast":null,"code":"import _classCallCheck from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/ReplyCard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar ReplyCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReplyCard, _Component);\n\n  function ReplyCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReplyCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReplyCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      post: _this.props.post,\n      replyMessage: []\n    };\n\n    _this.onReplyChange = function (event) {\n      _this.setState({\n        replyMessage: event.target.value\n      });\n    };\n\n    _this.onSubmit = function () {\n      var userName = _this.props.user.firstName + \" \" + _this.props.user.lastName;\n      var newPost = _this.state.post;\n      console.log(newPost);\n\n      if (newPost.replies) {\n        newPost.replies.push({\n          user: userName,\n          replyMessage: _this.state.replyMessage\n        });\n      } else {\n        newPost.replies = [_this.state.replyMessage];\n      }\n\n      _this.props.addReply(newPost, _this.props.user);\n    };\n\n    _this.addReplyHandler = function () {};\n\n    return _this;\n  }\n\n  _createClass(ReplyCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"REPLIES = \", this.props.post.replies);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Card, {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          maxWidth: \"95%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-content-flexible\",\n        label: \"Post Message\",\n        multiline: true,\n        rowsMax: \"6\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: function onChange(e) {\n          return _this2.onReplyChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"small\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Submit Reply\")));\n    }\n  }]);\n\n  return ReplyCard;\n}(Component);\n\nReplyCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addReply: function addReply(post, user) {\n      dispatch(UserStore.addReply(post, user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ReplyCard));","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/ReplyCard.js"],"names":["React","Component","PropTypes","makeStyles","Card","CardActions","CardContent","Button","Typography","TextField","connect","UserStore","withStyles","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","ReplyCard","state","post","props","replyMessage","onReplyChange","event","setState","target","value","onSubmit","userName","user","firstName","lastName","newPost","console","log","replies","push","addReply","addReplyHandler","maxWidth","e","propTypes","classes","object","isRequired","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass ReplyCard extends Component {\n  componentDidMount() {\n    console.log(\"REPLIES = \", this.props.post.replies);\n  }\n  state = {\n    post: this.props.post,\n    replyMessage: []\n  };\n\n  onReplyChange = event => {\n    this.setState({\n      replyMessage: event.target.value\n    });\n  };\n\n  onSubmit = () => {\n    const userName = this.props.user.firstName + \" \" + this.props.user.lastName;\n    const newPost = this.state.post;\n    console.log(newPost);\n    if (newPost.replies) {\n      newPost.replies.push({\n        user: userName,\n        replyMessage: this.state.replyMessage\n      });\n    } else {\n      newPost.replies = [this.state.replyMessage];\n    }\n\n    this.props.addReply(newPost, this.props.user);\n  };\n\n  addReplyHandler = () => {};\n  render() {\n    return (\n      <Card\n        style={{ marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"95%\" }}\n      >\n        <CardContent>\n          <TextField\n            id=\"outlined-content-flexible\"\n            label=\"Post Message\"\n            multiline\n            rowsMax=\"6\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => this.onReplyChange(e)}\n          />\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" size=\"small\" onClick={this.onSubmit}>\n            Submit Reply\n          </Button>\n          {/* <Button size=\"small\">Cancel</Button> */}\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nReplyCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReply: (post, user) => {\n      dispatch(UserStore.addReply(post, user));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ReplyCard));\n"]},"metadata":{},"sourceType":"module"}