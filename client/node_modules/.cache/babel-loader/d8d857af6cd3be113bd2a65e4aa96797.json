{"ast":null,"code":"import _objectSpread from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"./action\";\nvar initState = {\n  user: {\n    isAuthenticated: false,\n    shouldRedirect: false,\n    user: null,\n    userType: null,\n    patientList: null,\n    healthTips: null,\n    posts: null,\n    loadedResults: null,\n    conditions: null\n  }\n};\nexport function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"ACTION = \", action);\n\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      var userType = \"\";\n\n      if (action.user.data.designation) {\n        userType = \"EM\";\n      } else {\n        userType = \"PT\";\n      }\n\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        shouldRedirect: true,\n        user: action.user.data,\n        userType: userType\n      });\n\n    case actionTypes.LOGOUT:\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        shouldRedirect: true,\n        user: null,\n        userType: null\n      });\n\n    case actionTypes.GETPATIENTS:\n      return _objectSpread({}, state, {\n        patientList: action.patients.data.patients\n      });\n\n    case actionTypes.GETPATIENT:\n      return _objectSpread({}, state, {\n        loadedResults: action.patient.data.healthData\n      });\n\n    case actionTypes.CREATETIP:\n      return _objectSpread({}, state);\n\n    case actionTypes.GETTIPS:\n      return _objectSpread({}, state, {\n        healthTips: action.tips.data.tips\n      });\n\n    case actionTypes.CREATEPOST:\n      return _objectSpread({}, state);\n\n    case actionTypes.ADDREPLY:\n      return _objectSpread({}, state);\n\n    case actionTypes.GETPOSTS:\n      return _objectSpread({}, state, {\n        posts: action.posts.data.posts\n      });\n\n    case actionTypes.DELETETIP:\n      state.healthTips.splice(state.healthTips.indexOf(action.tip), 1);\n      return _objectSpread({}, state, {\n        healthTips: state.healthTips\n      });\n\n    case actionTypes.GETCONDITIONS:\n      return _objectSpread({}, state, {\n        conditions: action.conditions.data.conditions\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/store/user/reducer.js"],"names":["actionTypes","initState","user","isAuthenticated","shouldRedirect","userType","patientList","healthTips","posts","loadedResults","conditions","state","action","console","log","type","LOGIN","data","designation","LOGOUT","GETPATIENTS","patients","GETPATIENT","patient","healthData","CREATETIP","GETTIPS","tips","CREATEPOST","ADDREPLY","GETPOSTS","DELETETIP","splice","indexOf","tip","GETCONDITIONS"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,KADb;AAEJC,IAAAA,cAAc,EAAE,KAFZ;AAGJF,IAAAA,IAAI,EAAE,IAHF;AAIJG,IAAAA,QAAQ,EAAE,IAJN;AAKJC,IAAAA,WAAW,EAAE,IALT;AAMJC,IAAAA,UAAU,EAAE,IANR;AAOJC,IAAAA,KAAK,EAAE,IAPH;AAQJC,IAAAA,aAAa,EAAE,IARX;AASJC,IAAAA,UAAU,EAAE;AATR;AADU,CAAlB;AAcA,OAAO,SAASR,IAAT,GAAyC;AAAA,MAA3BS,KAA2B,uEAAnBV,SAAmB;AAAA,MAARW,MAAQ;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKf,WAAW,CAACgB,KAAjB;AACE,UAAIX,QAAQ,GAAG,EAAf;;AACA,UAAIO,MAAM,CAACV,IAAP,CAAYe,IAAZ,CAAiBC,WAArB,EAAkC;AAChCb,QAAAA,QAAQ,GAAG,IAAX;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,+BACKM,KADL;AAEER,QAAAA,eAAe,EAAE,IAFnB;AAGEC,QAAAA,cAAc,EAAE,IAHlB;AAIEF,QAAAA,IAAI,EAAEU,MAAM,CAACV,IAAP,CAAYe,IAJpB;AAKEZ,QAAAA,QAAQ,EAAEA;AALZ;;AAOF,SAAKL,WAAW,CAACmB,MAAjB;AACE,+BACKR,KADL;AAEER,QAAAA,eAAe,EAAE,KAFnB;AAGEC,QAAAA,cAAc,EAAE,IAHlB;AAIEF,QAAAA,IAAI,EAAE,IAJR;AAKEG,QAAAA,QAAQ,EAAE;AALZ;;AAOF,SAAKL,WAAW,CAACoB,WAAjB;AACE,+BACKT,KADL;AAEEL,QAAAA,WAAW,EAAEM,MAAM,CAACS,QAAP,CAAgBJ,IAAhB,CAAqBI;AAFpC;;AAIF,SAAKrB,WAAW,CAACsB,UAAjB;AACE,+BACKX,KADL;AAEEF,QAAAA,aAAa,EAAEG,MAAM,CAACW,OAAP,CAAeN,IAAf,CAAoBO;AAFrC;;AAIF,SAAKxB,WAAW,CAACyB,SAAjB;AACE,+BACKd,KADL;;AAGF,SAAKX,WAAW,CAAC0B,OAAjB;AACE,+BACKf,KADL;AAEEJ,QAAAA,UAAU,EAAEK,MAAM,CAACe,IAAP,CAAYV,IAAZ,CAAiBU;AAF/B;;AAIF,SAAK3B,WAAW,CAAC4B,UAAjB;AACE,+BACKjB,KADL;;AAGF,SAAKX,WAAW,CAAC6B,QAAjB;AACE,+BACKlB,KADL;;AAGF,SAAKX,WAAW,CAAC8B,QAAjB;AACE,+BACKnB,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAP,CAAaS,IAAb,CAAkBT;AAF3B;;AAIF,SAAKR,WAAW,CAAC+B,SAAjB;AACEpB,MAAAA,KAAK,CAACJ,UAAN,CAAiByB,MAAjB,CAAwBrB,KAAK,CAACJ,UAAN,CAAiB0B,OAAjB,CAAyBrB,MAAM,CAACsB,GAAhC,CAAxB,EAA8D,CAA9D;AACA,+BACKvB,KADL;AAEEJ,QAAAA,UAAU,EAAEI,KAAK,CAACJ;AAFpB;;AAIF,SAAKP,WAAW,CAACmC,aAAjB;AACE,+BACKxB,KADL;AAEED,QAAAA,UAAU,EAAEE,MAAM,CAACF,UAAP,CAAkBO,IAAlB,CAAuBP;AAFrC;;AAIF;AACE,aAAOC,KAAP;AAnEJ;AAqED","sourcesContent":["import * as actionTypes from \"./action\";\n\nconst initState = {\n  user: {\n    isAuthenticated: false,\n    shouldRedirect: false,\n    user: null,\n    userType: null,\n    patientList: null,\n    healthTips: null,\n    posts: null,\n    loadedResults: null,\n    conditions: null\n  }\n};\n\nexport function user(state = initState, action) {\n  console.log(\"ACTION = \", action);\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      let userType = \"\";\n      if (action.user.data.designation) {\n        userType = \"EM\";\n      } else {\n        userType = \"PT\";\n      }\n      return {\n        ...state,\n        isAuthenticated: true,\n        shouldRedirect: true,\n        user: action.user.data,\n        userType: userType\n      };\n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        shouldRedirect: true,\n        user: null,\n        userType: null\n      };\n    case actionTypes.GETPATIENTS:\n      return {\n        ...state,\n        patientList: action.patients.data.patients\n      };\n    case actionTypes.GETPATIENT:\n      return {\n        ...state,\n        loadedResults: action.patient.data.healthData\n      };\n    case actionTypes.CREATETIP:\n      return {\n        ...state\n      };\n    case actionTypes.GETTIPS:\n      return {\n        ...state,\n        healthTips: action.tips.data.tips\n      };\n    case actionTypes.CREATEPOST:\n      return {\n        ...state\n      };\n    case actionTypes.ADDREPLY:\n      return {\n        ...state\n      };\n    case actionTypes.GETPOSTS:\n      return {\n        ...state,\n        posts: action.posts.data.posts\n      };\n    case actionTypes.DELETETIP:\n      state.healthTips.splice(state.healthTips.indexOf(action.tip), 1);\n      return {\n        ...state,\n        healthTips: state.healthTips\n      };\n    case actionTypes.GETCONDITIONS:\n      return {\n        ...state,\n        conditions: action.conditions.data.conditions\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}