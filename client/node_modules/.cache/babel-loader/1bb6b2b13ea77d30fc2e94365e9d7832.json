{"ast":null,"code":"import _slicedToArray from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/PostExpansionPanel.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: 10\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: 'bold',\n      textDecoration: 'underline'\n    }\n  };\n};\n\nfunction PostExpansionPanel(props) {\n  var _this = this;\n\n  var classes = props.classes;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      replyClicked = _useState2[0],\n      setReplyClicked = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ExpansionPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.title)), React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.content)), this.state.replyClicked ? React.createElement(TextField, {\n    id: \"outlined-content-flexible\",\n    label: \"Post Message\",\n    multiline: true,\n    rowsMax: \"6\",\n    onChange: function onChange(e) {\n      return _this.onContentChange(e);\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }) : null, \"}\", React.createElement(ExpansionPanelActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"REPLY\"))));\n}\n\nPostExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PostExpansionPanel);","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/PostExpansionPanel.js"],"names":["React","useState","PropTypes","withStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpansionPanelActions","Typography","ExpandMoreIcon","Button","TextField","styles","theme","root","width","marginTop","heading","fontSize","typography","pxToRem","fontWeight","textDecoration","PostExpansionPanel","props","classes","replyClicked","setReplyClicked","title","content","state","e","onContentChange","textField","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,SAAS,EAAE;AAFP,KADiB;AAKvBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAEL,KAAK,CAACM,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADH;AAEPC,MAAAA,UAAU,EAAE,MAFL;AAGPC,MAAAA,cAAc,EAAE;AAHT;AALc,GAAL;AAAA,CAApB;;AAYA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAAA,MACzBC,OADyB,GACbD,KADa,CACzBC,OADyB;;AAAA,kBAEOxB,QAAQ,CAAC,KAAD,CAFf;AAAA;AAAA,MAE1ByB,YAF0B;AAAA,MAEZC,eAFY;;AAGjC,SACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AAAuB,IAAA,UAAU,EAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEW,OAAO,CAACR,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCO,KAAK,CAACI,KAA/C,CADF,CADF,EAIE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,OADT,CADF,CAJF,EAUG,KAAKC,KAAL,CAAWJ,YAAX,GACC,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,2BADP;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAC,GAJZ;AAKI,IAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,aAAI,KAAI,CAACC,eAAL,CAAqBD,CAArB,CAAJ;AAAA,KALf;AAMI,IAAA,SAAS,EAAEN,OAAO,CAACQ,SANvB;AAOI,IAAA,MAAM,EAAC,QAPX;AAQI,IAAA,OAAO,EAAC,UARZ;AASI,IAAA,SAAS,MATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAYK,IAtBR,OAwBE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAxBF,CADF,CADF;AAkCD;;AAEDV,kBAAkB,CAACW,SAAnB,GAA+B;AAC7BT,EAAAA,OAAO,EAAEvB,SAAS,CAACiC,MAAV,CAAiBC;AADG,CAA/B;AAIA,eAAejC,UAAU,CAACS,MAAD,CAAV,CAAmBW,kBAAnB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: 10\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: 'bold',\n    textDecoration: 'underline'\n  },\n});\n\nfunction PostExpansionPanel(props) {\n  const { classes } = props;\n  const [replyClicked, setReplyClicked] = useState(false);\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{props.title}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            {props.content}\n          </Typography>\n          {/* {props.img ? <img src={props.img} alt=\"post img\" /> : null} */}\n        </ExpansionPanelDetails>\n        {this.state.replyClicked ? \n          <TextField\n              id='outlined-content-flexible'\n              label='Post Message'\n              multiline\n              rowsMax='6'\n              onChange={e => this.onContentChange(e)}\n              className={classes.textField}\n              margin='normal'\n              variant='outlined'\n              fullWidth\n            />\n            : null\n        }}\n        <ExpansionPanelActions>\n          <Button size=\"small\" color=\"primary\">\n            REPLY\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nPostExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PostExpansionPanel);"]},"metadata":{},"sourceType":"module"}