{"ast":null,"code":"import _objectSpread from \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './action';\nvar initState = {\n  user: {\n    isAuthenticated: false,\n    shouldRedirect: false,\n    user: null,\n    userType: null,\n    patientList: null,\n    healthTips: null,\n    loadedPatient: null\n  }\n};\nexport function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      var userType = '';\n\n      if (action.user.data.designation) {\n        userType = 'EM';\n      } else {\n        userType = 'PT';\n      }\n\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        shouldRedirect: true,\n        user: action.user.data,\n        userType: userType\n      });\n\n    case actionTypes.LOGOUT:\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        shouldRedirect: true,\n        user: null,\n        userType: null\n      });\n\n    case actionTypes.GETPATIENTS:\n      console.log(action);\n      return _objectSpread({}, state, {\n        patientList: action.patients.data.patients\n      });\n\n    case actionTypes.GETPATIENT:\n      console.log(action);\n      return _objectSpread({}, state, {\n        loadedPatient: action.patient.data\n      });\n\n    case actionTypes.CREATETIP:\n      console.log(action);\n      return _objectSpread({}, state);\n\n    case actionTypes.GETTIPS:\n      console.log('GET TIPS ACTION ', action);\n      return _objectSpread({}, state, {\n        healthTips: action.tips.data.tips\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/client/src/store/user/reducer.js"],"names":["actionTypes","initState","user","isAuthenticated","shouldRedirect","userType","patientList","healthTips","loadedPatient","state","action","console","log","type","LOGIN","data","designation","LOGOUT","GETPATIENTS","patients","GETPATIENT","patient","CREATETIP","GETTIPS","tips"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,KADf;AAEFC,IAAAA,cAAc,EAAE,KAFd;AAGFF,IAAAA,IAAI,EAAE,IAHJ;AAIFG,IAAAA,QAAQ,EAAE,IAJR;AAKFC,IAAAA,WAAW,EAAE,IALX;AAMFC,IAAAA,UAAU,EAAE,IANV;AAOFC,IAAAA,aAAa,EAAE;AAPb;AADQ,CAAlB;AAYA,OAAO,SAASN,IAAT,GAAyC;AAAA,MAA3BO,KAA2B,uEAAnBR,SAAmB;AAAA,MAARS,MAAQ;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKb,WAAW,CAACc,KAAjB;AACA,UAAIT,QAAQ,GAAG,EAAf;;AACI,UAAGK,MAAM,CAACR,IAAP,CAAYa,IAAZ,CAAiBC,WAApB,EAAiC;AAC7BX,QAAAA,QAAQ,GAAG,IAAX;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,+BACOI,KADP;AAEIN,QAAAA,eAAe,EAAE,IAFrB;AAGIC,QAAAA,cAAc,EAAE,IAHpB;AAIIF,QAAAA,IAAI,EAAEQ,MAAM,CAACR,IAAP,CAAYa,IAJtB;AAKIV,QAAAA,QAAQ,EAAEA;AALd;;AAOJ,SAAKL,WAAW,CAACiB,MAAjB;AACI,+BACOR,KADP;AAEIN,QAAAA,eAAe,EAAE,KAFrB;AAGIC,QAAAA,cAAc,EAAE,IAHpB;AAIIF,QAAAA,IAAI,EAAE,IAJV;AAKIG,QAAAA,QAAQ,EAAE;AALd;;AAOJ,SAAKL,WAAW,CAACkB,WAAjB;AACIP,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,+BACOD,KADP;AAEIH,QAAAA,WAAW,EAAEI,MAAM,CAACS,QAAP,CAAgBJ,IAAhB,CAAqBI;AAFtC;;AAIJ,SAAKnB,WAAW,CAACoB,UAAjB;AACIT,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,+BACOD,KADP;AAEID,QAAAA,aAAa,EAAEE,MAAM,CAACW,OAAP,CAAeN;AAFlC;;AAIJ,SAAKf,WAAW,CAACsB,SAAjB;AACIX,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,+BACOD,KADP;;AAGJ,SAAKT,WAAW,CAACuB,OAAjB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;AACI,+BACOD,KADP;AAEIF,QAAAA,UAAU,EAAEG,MAAM,CAACc,IAAP,CAAYT,IAAZ,CAAiBS;AAFjC;;AAIJ;AACI,aAAOf,KAAP;AA/CR;AAiDH","sourcesContent":["import * as actionTypes from './action';\n\n\nconst initState = {\n    user: {\n        isAuthenticated: false,\n        shouldRedirect: false,\n        user: null,\n        userType: null,\n        patientList: null,\n        healthTips: null,\n        loadedPatient: null\n    },\n}\n\nexport function user(state = initState, action) {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.LOGIN:\n        let userType = '';\n            if(action.user.data.designation) {\n                userType = 'EM';\n            } else {\n                userType = 'PT';\n            }\n            return {\n                ...state,\n                isAuthenticated: true,\n                shouldRedirect: true,\n                user: action.user.data,\n                userType: userType\n            }\n        case actionTypes.LOGOUT:\n            return {\n                ...state,\n                isAuthenticated: false,\n                shouldRedirect: true,\n                user: null,\n                userType: null\n            }\n        case actionTypes.GETPATIENTS:\n            console.log(action);\n            return {\n                ...state,\n                patientList: action.patients.data.patients\n            }\n        case actionTypes.GETPATIENT:\n            console.log(action);\n            return {\n                ...state,\n                loadedPatient: action.patient.data\n            }\n        case actionTypes.CREATETIP:\n            console.log(action);\n            return {\n                ...state,\n            }\n        case actionTypes.GETTIPS:\n        console.log('GET TIPS ACTION ', action);\n            return {\n                ...state,\n                healthTips: action.tips.data.tips\n            }\n        default: \n            return state;\n        }\n}\n"]},"metadata":{},"sourceType":"module"}