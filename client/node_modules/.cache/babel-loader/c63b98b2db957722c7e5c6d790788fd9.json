{"ast":null,"code":"import _objectSpread from \"/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './action';\nvar initState = {\n  user: {\n    isAuthenticated: false,\n    shouldRedirect: false,\n    user: null,\n    userType: null,\n    patientList: null,\n    healthTips: null,\n    loadedResults: null,\n    conditions: null\n  }\n};\nexport function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      var userType = '';\n\n      if (action.user.data.designation) {\n        userType = 'EM';\n      } else {\n        userType = 'PT';\n      }\n\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        shouldRedirect: true,\n        user: action.user.data,\n        userType: userType\n      });\n\n    case actionTypes.LOGOUT:\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        shouldRedirect: true,\n        user: null,\n        userType: null\n      });\n\n    case actionTypes.GETPATIENTS:\n      console.log(action);\n      return _objectSpread({}, state, {\n        patientList: action.patients.data.patients\n      });\n\n    case actionTypes.GETPATIENT:\n      console.log('GET PATIENT ACTION = ', action);\n      return _objectSpread({}, state, {\n        loadedResults: action.patient.data.healthData\n      });\n\n    case actionTypes.CREATETIP:\n      console.log(action);\n      return _objectSpread({}, state);\n\n    case actionTypes.GETTIPS:\n      console.log('GET TIPS ACTION ', action);\n      return _objectSpread({}, state, {\n        healthTips: action.tips.data.tips\n      });\n\n    case actionTypes.DELETETIP:\n      var updatedArray = state.healthTips;\n      updatedArray.splice(state.healthTips.indexOf(action.tip), 1);\n      return _objectSpread({}, state, {\n        healthTips: updatedArray\n      });\n\n    case actionTypes.GETCONDITIONS:\n      console.log('GET CONDITIONS ACTION ', action);\n      return _objectSpread({}, state, {\n        conditions: action.conditions.data.conditions\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/davidtrafford/MyDocuments/School/Semester5/COMP308/react/comp308_project/client/src/store/user/reducer.js"],"names":["actionTypes","initState","user","isAuthenticated","shouldRedirect","userType","patientList","healthTips","loadedResults","conditions","state","action","console","log","type","LOGIN","data","designation","LOGOUT","GETPATIENTS","patients","GETPATIENT","patient","healthData","CREATETIP","GETTIPS","tips","DELETETIP","updatedArray","splice","indexOf","tip","GETCONDITIONS"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,KADf;AAEFC,IAAAA,cAAc,EAAE,KAFd;AAGFF,IAAAA,IAAI,EAAE,IAHJ;AAIFG,IAAAA,QAAQ,EAAE,IAJR;AAKFC,IAAAA,WAAW,EAAE,IALX;AAMFC,IAAAA,UAAU,EAAE,IANV;AAOFC,IAAAA,aAAa,EAAE,IAPb;AAQFC,IAAAA,UAAU,EAAE;AARV;AADQ,CAAlB;AAaA,OAAO,SAASP,IAAT,GAAyC;AAAA,MAA3BQ,KAA2B,uEAAnBT,SAAmB;AAAA,MAARU,MAAQ;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKd,WAAW,CAACe,KAAjB;AACA,UAAIV,QAAQ,GAAG,EAAf;;AACI,UAAGM,MAAM,CAACT,IAAP,CAAYc,IAAZ,CAAiBC,WAApB,EAAiC;AAC7BZ,QAAAA,QAAQ,GAAG,IAAX;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,+BACOK,KADP;AAEIP,QAAAA,eAAe,EAAE,IAFrB;AAGIC,QAAAA,cAAc,EAAE,IAHpB;AAIIF,QAAAA,IAAI,EAAES,MAAM,CAACT,IAAP,CAAYc,IAJtB;AAKIX,QAAAA,QAAQ,EAAEA;AALd;;AAOJ,SAAKL,WAAW,CAACkB,MAAjB;AACI,+BACOR,KADP;AAEIP,QAAAA,eAAe,EAAE,KAFrB;AAGIC,QAAAA,cAAc,EAAE,IAHpB;AAIIF,QAAAA,IAAI,EAAE,IAJV;AAKIG,QAAAA,QAAQ,EAAE;AALd;;AAOJ,SAAKL,WAAW,CAACmB,WAAjB;AACIP,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,+BACOD,KADP;AAEIJ,QAAAA,WAAW,EAAEK,MAAM,CAACS,QAAP,CAAgBJ,IAAhB,CAAqBI;AAFtC;;AAIJ,SAAKpB,WAAW,CAACqB,UAAjB;AACIT,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAArC;AACA,+BACOD,KADP;AAEIF,QAAAA,aAAa,EAAEG,MAAM,CAACW,OAAP,CAAeN,IAAf,CAAoBO;AAFvC;;AAIJ,SAAKvB,WAAW,CAACwB,SAAjB;AACIZ,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,+BACOD,KADP;;AAGJ,SAAKV,WAAW,CAACyB,OAAjB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;AACI,+BACOD,KADP;AAEIH,QAAAA,UAAU,EAAEI,MAAM,CAACe,IAAP,CAAYV,IAAZ,CAAiBU;AAFjC;;AAIJ,SAAK1B,WAAW,CAAC2B,SAAjB;AACI,UAAMC,YAAY,GAAGlB,KAAK,CAACH,UAA3B;AACAqB,MAAAA,YAAY,CAACC,MAAb,CAAoBnB,KAAK,CAACH,UAAN,CAAiBuB,OAAjB,CAAyBnB,MAAM,CAACoB,GAAhC,CAApB,EAA0D,CAA1D;AACA,+BACOrB,KADP;AAEIH,QAAAA,UAAU,EAAEqB;AAFhB;;AAIJ,SAAK5B,WAAW,CAACgC,aAAjB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,MAAtC;AACI,+BACOD,KADP;AAEID,QAAAA,UAAU,EAAEE,MAAM,CAACF,UAAP,CAAkBO,IAAlB,CAAuBP;AAFvC;;AAIJ;AACI,aAAOC,KAAP;AA5DR;AA8DH","sourcesContent":["import * as actionTypes from './action';\n\n\nconst initState = {\n    user: {\n        isAuthenticated: false,\n        shouldRedirect: false,\n        user: null,\n        userType: null,\n        patientList: null,\n        healthTips: null,\n        loadedResults: null,\n        conditions: null,\n    },\n}\n\nexport function user(state = initState, action) {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.LOGIN:\n        let userType = '';\n            if(action.user.data.designation) {\n                userType = 'EM';\n            } else {\n                userType = 'PT';\n            }\n            return {\n                ...state,\n                isAuthenticated: true,\n                shouldRedirect: true,\n                user: action.user.data,\n                userType: userType\n            }\n        case actionTypes.LOGOUT:\n            return {\n                ...state,\n                isAuthenticated: false,\n                shouldRedirect: true,\n                user: null,\n                userType: null\n            }\n        case actionTypes.GETPATIENTS:\n            console.log(action);\n            return {\n                ...state,\n                patientList: action.patients.data.patients\n            }\n        case actionTypes.GETPATIENT:\n            console.log('GET PATIENT ACTION = ', action);\n            return {\n                ...state,\n                loadedResults: action.patient.data.healthData\n            }\n        case actionTypes.CREATETIP:\n            console.log(action);\n            return {\n                ...state,\n            }\n        case actionTypes.GETTIPS:\n        console.log('GET TIPS ACTION ', action);\n            return {\n                ...state,\n                healthTips: action.tips.data.tips\n            }\n        case actionTypes.DELETETIP:\n            const updatedArray = state.healthTips;\n            updatedArray.splice(state.healthTips.indexOf(action.tip), 1)\n            return {\n                ...state,\n                healthTips: updatedArray\n            }\n        case actionTypes.GETCONDITIONS:\n        console.log('GET CONDITIONS ACTION ', action);\n            return {\n                ...state,\n                conditions: action.conditions.data.conditions\n            }\n        default: \n            return state;\n        }\n}\n"]},"metadata":{},"sourceType":"module"}