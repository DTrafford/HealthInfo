{"ast":null,"code":"import _slicedToArray from \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/PostExpansionPanel.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Button from \"@material-ui/core/Button\";\nimport ReplyCard from \"../UI/ReplyCard\";\nimport TextField from \"@material-ui/core/TextField\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: 10\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: \"bold\",\n      textDecoration: \"underline\"\n    }\n  };\n};\n\nfunction PostExpansionPanel(props) {\n  var classes = props.classes;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      replyClicked = _useState2[0],\n      setReplyClicked = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ExpansionPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.post.title, \" -\")), React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.post.content), props.img ? React.createElement(\"img\", {\n    src: props.img,\n    alt: \"post img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : null), props.post.replies && props.post.replies.length >= 1 ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      fontWeight: \"bold\",\n      width: \"100%\",\n      borderBottomWidth: 1,\n      borderBottomColor: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"REPLIES (\", props.post.replies.length, \")\")), React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.post.replies.map(function (reply) {\n    return React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, reply);\n  }))) : null, replyClicked ? React.createElement(ReplyCard, {\n    post: props.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : null, \"}\", React.createElement(ExpansionPanelActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return setReplyClicked(!replyClicked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, replyClicked ? React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"CANCEL\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"REPLY\")))));\n}\n\nPostExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PostExpansionPanel);","map":{"version":3,"sources":["/Users/davidtrafford/Documents/School/Cyber/CloudSecurity/KOBE/client/src/components/UI/PostExpansionPanel.js"],"names":["React","useState","PropTypes","withStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpansionPanelActions","Typography","ExpandMoreIcon","Button","ReplyCard","TextField","styles","theme","root","width","marginTop","heading","fontSize","typography","pxToRem","fontWeight","textDecoration","PostExpansionPanel","props","classes","replyClicked","setReplyClicked","post","title","content","img","replies","length","borderBottomWidth","borderBottomColor","map","reply","color","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Button from \"@material-ui/core/Button\";\nimport ReplyCard from \"../UI/ReplyCard\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 10\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: \"bold\",\n    textDecoration: \"underline\"\n  }\n});\n\nfunction PostExpansionPanel(props) {\n  const { classes } = props;\n  const [replyClicked, setReplyClicked] = useState(false);\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>\n            {props.post.title} -\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>{props.post.content}</Typography>\n          {props.img ? <img src={props.img} alt=\"post img\" /> : null}\n        </ExpansionPanelDetails>\n        {props.post.replies && props.post.replies.length >= 1 ? (\n          <React.Fragment>\n            <ExpansionPanelDetails>\n              <Typography\n                style={{\n                  fontWeight: \"bold\",\n                  width: \"100%\",\n                  borderBottomWidth: 1,\n                  borderBottomColor: \"black\"\n                }}\n              >\n                REPLIES ({props.post.replies.length})\n              </Typography>\n            </ExpansionPanelDetails>\n            <ExpansionPanelDetails>\n              {props.post.replies.map(reply => {\n                return <Typography>{reply}</Typography>;\n              })}\n            </ExpansionPanelDetails>\n          </React.Fragment>\n        ) : null}\n        {replyClicked ? <ReplyCard post={props.post} /> : null}}\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => setReplyClicked(!replyClicked)}\n          >\n            {replyClicked ? (\n              <span style={{ color: \"red\" }}>CANCEL</span>\n            ) : (\n              <span>REPLY</span>\n            )}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nPostExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PostExpansionPanel);\n"]},"metadata":{},"sourceType":"module"}