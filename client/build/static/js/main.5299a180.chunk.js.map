{"version":3,"sources":["assets/img/red_cross.jpg","logo.svg","instances/instance.js","store/user/action.js","store/user/function.js","history.js","store/user/UserStore.js","components/Header/Header.js","components/UI/Buttons/PrimaryButton.js","components/UI/Paper.js","components/Auth/Login/PatientLogin.js","components/Auth/Login/EmployeeLogin.js","components/Auth/Login/LoginTabs.js","components/Auth/Register/PatientRegister.js","components/Auth/Register/EmployeeRegister.js","components/Auth/Register/RegisterTabs.js","views/Home/Home.js","views/LandingPages/EmployeeLanding.js","views/LandingPages/PatientLanding.js","views/Tips/AddTip.js","components/UI/TipsExpansionPanel.js","views/Tips/ViewTips.js","views/Results/AddResults.js","components/UI/ExpansionPanel.js","views/Results/ViewResults.js","views/Results/PatientList.js","components/UI/Chips.js","components/UI/ConditionExpansion.js","views/Symptoms/Symptoms.js","components/UI/ReplyCard.js","components/UI/PostExpansionPanel.js","views/DiscussionBoard/DiscussionBoard.js","views/DiscussionBoard/CreatePost.js","App.js","serviceWorker.js","store/user/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","defaults","headers","common","baseUrl","window","location","href","indexOf","apiUrl","create","baseURL","responseType","LOGIN","LOGOUT","GETPATIENTS","GETPATIENT","CREATETIP","GETTIPS","CREATEPOST","ADDREPLY","GETPOSTS","DELETETIP","GETCONDITIONS","logIn","user","type","actionTypes","createHistory","UserStore","patientRegister","patient","dispatch","post","then","history","push","catch","err","console","log","employeeRegister","employee","patientLogIn","employeeLogIn","get","patients","getPatients","createTip","tip","getTips","tips","createPost","Authorization","token","addReply","postId","_id","put","getPosts","posts","addResults","id","results","response","getPatient","getConditions","symptoms","conditions","deleteTip","delete","logOut","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLogOut","props","state","isAuthenticated","userType","_this$props","classes","theme","react_default","a","createElement","className","root","AppBar_default","position","appBar","Toolbar_default","react_router_dom","to","style","width","src","require","alt","Typography_default","variant","color","grow","Fragment","Button_default","onClick","React","Component","connect","withStyles","flexGrow","backgroundColor","menuButton","marginLeft","marginRight","button","margin","spacing","unit","input","display","displayText","objectSpread","mixins","gutters","paddingTop","paddingBottom","marginTop","Paper_default","elevation","children","PatientLogin","email","password","onEmailChange","event","setState","target","value","onPasswordChange","onSubmit","_this2","UI_Paper","container","noValidate","autoComplete","TextField_default","label","textField","name","fullWidth","onChange","e","class","shouldRedirect","flexWrap","dense","menu","EmployeeLogin","TabContainer","_ref","dir","component","padding","LoginTabs","handleChange","handleChangeIndex","index","Tabs_default","indicatorColor","textColor","inkBarStyle","background","Tab_default","lib_default","axis","direction","onChangeIndex","Login_PatientLogin","Login_EmployeeLogin","palette","paper","withTheme","PatientRegister","firstName","lastName","doctorName","onFirstNameChange","onLastNameChange","onDoctorNameChange","newPatient","designations","EmployeeRegister","designation","onDesignationChange","newEmployee","select","SelectProps","MenuProps","helperText","map","option","MenuItem_default","key","RegisterTabs","RegisterTabs_TabContainer","Register_PatientRegister","Register_EmployeeRegister","Home","EmployeeLanding","title","componentDidMount","patientList","PatientLanding","AddTip","url","content","image","creatorId","onTitleChange","onUrlChange","onContentChange","onImageChange","persist","files","reader","FileReader","onload","imageBlob","Blob","URL","createObjectURL","Jimp","read","resize","quality","result","readAsDataURL","onImageChange2","inputElement","click","healthTip","userId","enctype","multiline","rowsMax","heading","fontSize","typography","pxToRem","fontWeight","textDecoration","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","DeleteSharp_default","ViewTips","healthTips","health_tips","UI_TipsExpansionPanel","AddResults","heartRate","bloodPressure","bodyWeight","patientId","onHeartRateChange","onBloodPressureChange","onBodyWeightChange","newResults","Cookies","ViewResults","patient_stats","UI_ExpansionPanel","loadedResults","PatientList","pathname","justifyContent","chip","Chip_default","icon","selected","desc","treatment","Symptoms","headache","fever","abdominal","back","rash","cramps","handleHeadAche","prevState","handleFever","handleAbdominal","handleBack","handleRash","handleCramps","newCheck","UI_Chips","Done_default","condition","UI_ConditionExpansion","description","ReplyCard","replyMessage","onReplyChange","userName","newPost","replies","addReplyHandler","Card_default","maxWidth","CardContent_default","CardActions_default","size","_useState","useState","_useState2","slicedToArray","replyClicked","setReplyClicked","creatorName","img","length","borderBottomWidth","borderBottomColor","reply","UI_ReplyCard","ExpansionPanelActions_default","DiscussionBoard","deletePost","UI_PostExpansionPanel","CreatePost","imagePath","for","ref","App","react_router","components_Header_Header","exact","path","Boolean","hostname","match","initState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","arguments","undefined","action","data","healthData","splice","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5299a180.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red_cross.c02ce73d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\nlet baseUrl = '';\n\n\nif (window.location.href.indexOf(\"localhost:3000/\") > 0) {\n    baseUrl = 'http://localhost:5000/api'\n} else {\n    baseUrl = 'http://localhost:5000/api'\n}\n\n\nexport const apiUrl = axios.create({\n    baseURL: baseUrl,\n    responseType: 'json'\n});\n\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GETPATIENTS = \"GETPATIENTS\";\nexport const GETPATIENT = \"GETPATIENT\";\nexport const CREATETIP = \"CREATETIP\";\nexport const GETTIPS = \"GETTIPS\";\nexport const CREATEPOST = \"CREATEPOST\";\nexport const ADDREPLY = \"ADDREPLY\";\nexport const GETPOSTS = \"GETPOSTS\";\nexport const DELETETIP = \"DELETETIP\";\nexport const GETCONDITIONS = \"GETCONDITIONS\";\n","import * as actionTypes from \"./action\";\n\n//user\nexport function logIn(user) {\n  return { type: actionTypes.LOGIN, user };\n}\nexport function logOut() {\n  return { type: actionTypes.LOGOUT };\n}\nexport function getPatients(patients) {\n  return { type: actionTypes.GETPATIENTS, patients };\n}\nexport function getPatient(patient) {\n  return { type: actionTypes.GETPATIENT, patient };\n}\nexport function createTip(tip) {\n  return { type: actionTypes.CREATETIP, tip };\n}\nexport function getTips(tips) {\n  return { type: actionTypes.GETTIPS, tips };\n}\nexport function createPost(post) {\n  return { type: actionTypes.CREATEPOST, post };\n}\nexport function addReply(post) {\n  return { type: actionTypes.ADDREPLY, post };\n}\nexport function getPosts(posts) {\n  return { type: actionTypes.GETPOSTS, posts };\n}\nexport function deleteTip(tip) {\n  return { type: actionTypes.DELETETIP, tip };\n}\nexport function getConditions(conditions) {\n  return { type: actionTypes.GETCONDITIONS, conditions };\n}\n","import createHistory from 'history/createBrowserHistory';\nexport default createHistory();","///////////*****************//////// USERSTORE\n\nimport { apiUrl } from \"../../instances/instance\";\nimport {\n  logIn,\n  logOut,\n  getPatients,\n  createTip,\n  getTips,\n  deleteTip,\n  createPost,\n  getPosts,\n  addReply,\n  getPatient,\n  getConditions\n} from \"./function\";\nimport history from \"../../history\";\nexport default class UserStore {\n  // pull data /////\n  static patientRegister = patient => {\n    return dispatch => {\n      apiUrl\n        .post(\"/patient/signup\", patient)\n        .then(patient => {\n          history.push(\"/login\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static employeeRegister = employee => {\n    return dispatch => {\n      apiUrl\n        .post(\"/employee/signup\", employee)\n        .then(patient => {\n          history.push(\"/login\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static patientLogIn = patient => {\n    return dispatch => {\n      apiUrl\n        .post(\"/patient/login\", patient)\n        .then(patient => {\n          dispatch(logIn(patient));\n          history.push(\"/patient\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static employeeLogIn = employee => {\n    return dispatch => {\n      apiUrl\n        .post(\"/employee/login\", employee)\n        .then(employee => {\n          dispatch(logIn(employee));\n        })\n        .then(() => {\n          apiUrl.get(\"/patient/patient_list\").then(patients => {\n            dispatch(getPatients(patients));\n            history.push(\"/employee\");\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static createTip = tip => {\n    return dispatch => {\n      apiUrl\n        .post(\"/tip\", tip)\n        .then(tip => {\n          dispatch(createTip(tip));\n          history.push(\"/employee\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static getTips = () => {\n    return dispatch => {\n      apiUrl\n        .get(\"/tip\")\n        .then(tips => {\n          dispatch(getTips(tips));\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static createPost = (post, user) => {\n    return dispatch => {\n      apiUrl\n        .post(\"/posts\", post, {\n          headers: { Authorization: \"Bearer \" + user.token }\n        })\n        .then(post => {\n          dispatch(createPost(post));\n          history.push(\"/patient\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static addReply = (post, user) => {\n    const postId = post._id;\n    return dispatch => {\n      apiUrl\n        .put(\"/posts/\" + postId + \"/addReply\", post, {\n          headers: { Authorization: \"Bearer \" + user.token }\n        })\n        .then(post => {\n          dispatch(addReply(post));\n          history.push(\"/patient\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static getPosts = () => {\n    return dispatch => {\n      apiUrl\n        .get(\"/posts\")\n        .then(posts => {\n          dispatch(getPosts(posts));\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static addResults = (id, results) => {\n    return dispatch => {\n      apiUrl.put(\"/patient/\" + id, results).then(response => {\n        history.push(\"patient_list\");\n      });\n    };\n  };\n  static getPatient = id => {\n    return dispatch => {\n      apiUrl.get(\"/patient/\" + id).then(patient => {\n        dispatch(getPatient(patient));\n      });\n    };\n  };\n  static getConditions = symptoms => {\n    return dispatch => {\n      apiUrl.post(\"/condition\", symptoms).then(conditions => {\n        dispatch(getConditions(conditions));\n      });\n    };\n  };\n  static deleteTip = tip => {\n    return dispatch => {\n      apiUrl\n        .delete(\"/tip/\" + tip._id)\n        .then(response => {\n          dispatch(deleteTip(tip));\n          history.push(\"/health_tips\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n  };\n  static logOut = () => {\n    return dispatch => {\n      dispatch(logOut());\n      history.push(\"/\");\n    };\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    backgroundColor: \"red\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n});\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isAuthenticated: false,\n      userType: \"\"\n    };\n  }\n\n  onLogOut = () => {\n    this.props.logOut();\n  };\n  render() {\n    const { classes, theme } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Link to={\"/\"} style={{ width: \"40px\" }}>\n              <img\n                src={require(\"../../assets/img/red_cross.jpg\")}\n                alt=\"red cross\"\n                className=\"headerLogo\"\n              />\n            </Link>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              KOBE CLINIC\n            </Typography>\n            {!this.props.isAuthenticated ? (\n              <React.Fragment>\n                <Link to={\"/login\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Login</Button>\n                </Link>\n                <Link to={\"/register\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Register</Button>\n                </Link>\n              </React.Fragment>\n            ) : this.props.userType === \"PT\" ? (\n              <React.Fragment>\n                <Link to={\"/symptoms\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Symptom Checker</Button>\n                </Link>\n                <Link to={\"/health_tips\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Health Tips</Button>\n                </Link>\n                <Link to={\"/patient/discussion_board\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Discussion Board</Button>\n                </Link>\n                <Link to={\"/\"} className=\"headerLink\">\n                  <Button color=\"inherit\" onClick={this.onLogOut}>\n                    Log Out\n                  </Button>\n                </Link>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Link to={\"/add_tip\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Add Tip</Button>\n                </Link>\n                <Link to={\"/health_tips\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Health Tips</Button>\n                </Link>\n                <Link to={\"/patient_list\"} className=\"headerLink\">\n                  <Button color=\"inherit\">Patient List</Button>\n                </Link>\n                <Link to={\"/\"} className=\"headerLink\">\n                  <Button color=\"inherit\" onClick={this.onLogOut}>\n                    Log Out\n                  </Button>\n                </Link>\n              </React.Fragment>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    userType: state.userType\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => {\n      dispatch(UserStore.logOut());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Header));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nfunction PrimaryButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Button color=\"primary\" className={classes.button}>\n        {props.displayText}\n      </Button>\n    </div>\n  );\n}\n\nPrimaryButton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PrimaryButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    width: \"60%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30\n  }\n});\n\nfunction PaperSheet(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={1}>\n        {props.children}\n      </Paper>\n    </div>\n  );\n}\n\nPaperSheet.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PaperSheet);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PrimaryButton from \"../../UI/Buttons/PrimaryButton\";\nimport \"./Login.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../../store/user/UserStore\";\nimport PaperSheet from \"../../UI/Paper\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass PatientLogin extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  onEmailChange = event => {\n    this.setState({\n      email: event.target.value\n    });\n  };\n  onPasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n\n  onSubmit = event => {\n    const patient = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.patientLogIn(patient);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <PaperSheet className=\"logInFormCard\">\n        <div className=\"loginContainer\">\n          <h1 className=\"loginTitle\">Patient Log In</h1>\n          <hr />\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"outlined-email-input\"\n              label=\"Email\"\n              className={classes.textField}\n              type=\"email\"\n              name=\"email\"\n              // autoComplete='email'\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onEmailChange(e)}\n            />\n            <TextField\n              id=\"outlined-password-input\"\n              label=\"Password\"\n              className={classes.textField}\n              type=\"password\"\n              // autoComplete='current-password'\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onPasswordChange(e)}\n            />\n            {/* <PrimaryButton onClick={this.onSubmit} displayText=\"Submit\"/> */}\n            <button onClick={this.onSubmit} type=\"button\" class=\"submitButton\">\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nPatientLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    userType: state.userType,\n    shouldRedirect: state.shouldRedirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patientLogIn: patient => {\n      dispatch(UserStore.patientLogIn(patient));\n    }\n  };\n};\n\n// export default withStyles(styles)(PatientLogin);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(PatientLogin));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PrimaryButton from \"../../UI/Buttons/PrimaryButton\";\nimport \"./Login.css\";\nimport PaperSheet from \"../../UI/Paper\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../../store/user/UserStore\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass EmployeeLogin extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  onEmailChange = event => {\n    this.setState({\n      email: event.target.value\n    });\n  };\n  onPasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n\n  onSubmit = event => {\n    const employee = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.employeeLogIn(employee);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <PaperSheet className=\"logInFormCard\">\n        <div className=\"loginContainer\">\n          <h1 className=\"loginTitle\">Employee Log In</h1>\n          <hr />\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"outlined-email-input\"\n              label=\"Email\"\n              className={classes.textField}\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onEmailChange(e)}\n            />\n            <TextField\n              id=\"outlined-password-input\"\n              label=\"Password\"\n              className={classes.textField}\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onPasswordChange(e)}\n            />\n            <button onClick={this.onSubmit} type=\"button\" class=\"submitButton\">\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nEmployeeLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    employeeLogIn: employee => {\n      dispatch(UserStore.employeeLogIn(employee));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(EmployeeLogin));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nimport PatientLogin from './PatientLogin';\nimport EmployeeLogin from './EmployeeLogin';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '60%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n});\n\nclass LoginTabs extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleChange}\n            indicatorColor=\"secondary\"\n            textColor=\"secondary\"\n            variant=\"fullWidth\"\n            inkBarStyle={{background: 'blue'}}\n          >\n            <Tab label=\"Patient\" />\n            <Tab label=\"Employee\" />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}\n        >\n          <TabContainer dir={theme.direction}><PatientLogin /></TabContainer>\n          <TabContainer dir={theme.direction}><EmployeeLogin /></TabContainer>\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nLoginTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(LoginTabs);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport {connect} from 'react-redux';\nimport UserStore from \"../../../store/user/UserStore\";\nimport './Register.css';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass PatientRegister extends React.Component {\n  state = {\n    email: '',\n    firstName: '',\n    lastName: '',\n    password: '',\n    doctorName: null\n  }\n\n  onEmailChange = event => {\n    this.setState({\n      email: event.target.value,\n    });\n  };\n  onPasswordChange = event => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n  onFirstNameChange = event => {\n    this.setState({\n      firstName: event.target.value,\n    });\n  };\n  onLastNameChange = event => {\n    this.setState({\n      lastName: event.target.value,\n    });\n  };\n  onDoctorNameChange = event => {\n    this.setState({\n      doctorName: event.target.value,\n    });\n  };\n\n  onSubmit = event => {\n      const newPatient = {\n        email: this.state.email,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        doctorName: this.state.doctorName,\n        userType: 'PT'\n      }\n      this.props.patientRegister(newPatient);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n      <h1 className=\"registerTitle\">Patient Registration</h1>\n      <hr/>\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"outlined-email-input\"\n          label=\"Email\"\n          className={classes.textField}\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth   \n          onChange={(e) => this.onEmailChange(e)}   \n        />\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          className={classes.textField}\n          type=\"password\"\n          autoComplete=\"current-password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n          onChange={(e) => this.onPasswordChange(e)}  \n        />\n         <TextField\n          id=\"outlined-firstName-input\"\n          label=\"First Name\"\n          className={classes.textField}\n          type=\"text\"\n          name=\"firstName\"\n          autoComplete=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n          onChange={(e) => this.onFirstNameChange(e)}  \n        />\n         <TextField\n          id=\"outlined-lastName-input\"\n          label=\"Last Name\"\n          className={classes.textField}\n          type=\"text\"\n          name=\"lastName\"\n          autoComplete=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n          onChange={(e) => this.onLastNameChange(e)}  \n        />\n         <TextField\n          id=\"outlined-doctorName-input\"\n          label=\"Doctor's Name\"\n          className={classes.textField}\n          type=\"text\"\n          name=\"doctorName\"\n        //   autoComplete=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n          onChange={(e) => this.onDoctorNameChange(e)}  \n        />\n        <Link to={'/login'} style={{marginLeft: 'auto'}}>\n        <button onClick={this.onSubmit} type=\"button\" class=\"submitButton\">SUBMIT</button>\n        </Link>\n      </form>\n      </div>\n    );\n  }\n}\n\nPatientRegister.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patientRegister: patient => {\n      dispatch(UserStore.patientRegister(patient));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PatientRegister));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PrimaryButton from \"../../UI/Buttons/PrimaryButton\";\nimport \"./Register.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../../store/user/UserStore\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nconst designations = [\n  {\n    value: \"MD\",\n    label: \"Physician\"\n  },\n  {\n    value: \"RPN\",\n    label: \"Registered Practical Nurse\"\n  },\n  {\n    value: \"RN\",\n    label: \"Registered Nurse\"\n  }\n];\n\nclass EmployeeRegister extends React.Component {\n  state = {\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    designation: null\n  };\n\n  onEmailChange = event => {\n    this.setState({\n      email: event.target.value\n    });\n  };\n  onPasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n  onFirstNameChange = event => {\n    this.setState({\n      firstName: event.target.value\n    });\n  };\n  onLastNameChange = event => {\n    this.setState({\n      lastName: event.target.value\n    });\n  };\n  onDesignationChange = event => {\n    this.setState({\n      designation: event.target.value\n    });\n  };\n\n  onSubmit = event => {\n    const newEmployee = {\n      email: this.state.email,\n      password: this.state.password,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      designation: this.state.designation,\n      userType: \"EM\"\n    };\n    this.props.employeeRegister(newEmployee);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <h1 className=\"registerTitle\">Health Practioner Registration</h1>\n        <hr />\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"outlined-email-input\"\n            label=\"Email\"\n            className={classes.textField}\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => this.onEmailChange(e)}\n          />\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Password\"\n            className={classes.textField}\n            type=\"password\"\n            autoComplete=\"current-password\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => this.onPasswordChange(e)}\n          />\n          <TextField\n            id=\"outlined-firstName-input\"\n            label=\"First Name\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"firstName\"\n            autoComplete=\"name\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => this.onFirstNameChange(e)}\n          />\n          <TextField\n            id=\"outlined-lastName-input\"\n            label=\"Last Name\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"lastName\"\n            autoComplete=\"name\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => this.onLastNameChange(e)}\n          />\n          <TextField\n            id=\"outlined-select-designation\"\n            select\n            label=\"Professional Designation\"\n            className={classes.textField}\n            value={this.state.designation}\n            onChange={e => this.onDesignationChange(e)}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu\n              }\n            }}\n            helperText=\"Please select your professional designation\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n          >\n            {designations.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Link to={\"/login\"} style={{ marginLeft: \"auto\" }}>\n            <button onClick={this.onSubmit} type=\"button\" class=\"submitButton\">\n              SUBMIT\n            </button>\n          </Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nEmployeeRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    employeeRegister: employee => {\n      dispatch(UserStore.employeeRegister(employee));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(EmployeeRegister));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nimport PatientRegister from './PatientRegister';\nimport EmployeeRegister from './EmployeeRegister';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '60%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n});\n\nclass RegisterTabs extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleChange}\n            indicatorColor=\"secondary\"\n            textColor=\"secondary\"\n            variant=\"fullWidth\"\n            inkBarStyle={{background: 'blue'}}\n          >\n            <Tab label=\"Patient\" />\n            <Tab label=\"Employee\" />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}\n        >\n          <TabContainer dir={theme.direction}><PatientRegister /></TabContainer>\n          <TabContainer dir={theme.direction}><EmployeeRegister /></TabContainer>\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nRegisterTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(RegisterTabs);","import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport Header from \"../../components/Header/Header\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <img\n          src={require(\"../../assets/img/red_cross.jpg\")}\n          alt=\"red cross\"\n          className=\"logoImage\"\n        />\n        <h1 className=\"App_H1\">KOBE CLINIC</h1>\n        <h1 className=\"App_H1\">Take Control Of Your Health</h1>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./Landing.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass EmployeeLanding extends Component {\n  state = {\n    firstName: \"David\",\n    lastName: \"Trafford\",\n    designation: \"MD\",\n    title: \"\"\n  };\n\n  componentDidMount = () => {\n    this.props.getTips();\n  };\n  render() {\n    return (\n      <div className=\"landingContainer\">\n        <h1>\n          Welcome - {this.props.user.firstName} {this.props.user.lastName} (\n          {this.props.user.designation})\n        </h1>\n        <hr />\n        <ul>\n          <li>\n            <Link to={\"/add_tip\"} style={{ marginLeft: \"auto\" }}>\n              <button onClick={\"\"} type=\"button\" class=\"landingLinkButton\">\n                ADD HEALTH TIP\n              </button>\n            </Link>\n          </li>\n          <li>\n            <Link to={\"/health_tips\"} style={{ marginLeft: \"auto\" }}>\n              <button onClick={\"\"} type=\"button\" class=\"landingLinkButton\">\n                HEALTH TIPS\n              </button>\n            </Link>\n          </li>\n          <li>\n            <Link to={\"/patient_list\"} style={{ marginLeft: \"auto\" }}>\n              <button onClick={\"\"} type=\"button\" class=\"landingLinkButton\">\n                PATIENT LIST\n              </button>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    patientList: state.patientList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patientLogIn: patient => {\n      dispatch(UserStore.patientLogIn(patient));\n    },\n    getTips: () => {\n      dispatch(UserStore.getTips());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeLanding);\n","import React, { Component } from \"react\";\nimport \"./Landing.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass PatientLanding extends Component {\n  state = {\n    firstName: \"David\",\n    lastName: \"Trafford\"\n  };\n\n  componentDidMount = () => {\n    this.props.getTips();\n    this.props.getPosts();\n  };\n\n  render() {\n    return (\n      <div className=\"landingContainer\">\n        <h1>\n          Welcome {this.props.user.firstName} {this.props.user.lastName}\n        </h1>\n        <ul>\n          <li>\n            <Link to={\"/symptoms\"} style={{ marginLeft: \"auto\" }}>\n              <button onClick={\"\"} type=\"button\" class=\"landingLinkButton\">\n                SYMPTOM CHECKER\n              </button>\n            </Link>\n          </li>\n          <li>\n            <Link to={\"/health_tips\"} style={{ marginLeft: \"auto\" }}>\n              <button onClick={\"\"} type=\"button\" class=\"landingLinkButton\">\n                HEALTH TIPS\n              </button>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={\"/patient/discussion_board\"}\n              style={{ marginLeft: \"auto\" }}\n            >\n              <button onClick={\"\"} type=\"button\" class=\"landingLinkButton\">\n                DISCUSSION BOARD\n              </button>\n            </Link>\n          </li>\n          <li>\n            <a href=\"mailto:emergencysuppoert@example.com?subject=Please Help&body=I am in need of assistance\">\n              <button onClick={\"\"} type=\"button\" class=\"landingLinkButton\">\n                CONTACT EMERGENCY SERVICES\n              </button>\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patientLogIn: patient => {\n      dispatch(UserStore.patientLogIn(patient));\n    },\n    getTips: () => {\n      dispatch(UserStore.getTips());\n    },\n    getPosts: () => {\n      dispatch(UserStore.getPosts());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientLanding);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Tips.css\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport Jimp from \"jimp\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass AddTip extends Component {\n  state = {\n    title: \"\",\n    url: \"\",\n    content: \"\",\n    image: null,\n    creatorId: \"\"\n  };\n\n  componentDidMount = () => {};\n\n  onTitleChange = event => {\n    this.setState({\n      title: event.target.value\n    });\n  };\n\n  onUrlChange = event => {\n    this.setState({\n      url: event.target.value\n    });\n  };\n\n  onContentChange = event => {\n    this.setState({\n      content: event.target.value\n    });\n  };\n\n  onImageChange = event => {\n    event.persist();\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.onload = e => {\n        var imageBlob = new Blob([event.target.files[0]], {\n          type: event.target.files[0].type\n        });\n        var src = URL.createObjectURL(imageBlob);\n        Jimp.read(src, (err, image) => {\n          return image.resize(256, 256).quality(60);\n        });\n        this.setState({ image: e.target.result });\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  onImageChange2 = () => {\n    this.inputElement.click();\n  };\n\n  onSubmit = () => {\n    const healthTip = {\n      title: this.state.title,\n      url: this.state.url,\n      content: this.state.content,\n      image: this.state.image,\n      creatorId: this.props.user.userId\n    };\n\n    this.props.createTip(healthTip);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <PaperSheet>\n        <div>\n          <h1 className=\"addTipTitle\">Add A New Health Tip</h1>\n          <hr />\n          <form\n            className={classes.container}\n            noValidate\n            autoComplete=\"off\"\n            enctype=\"multipart/form-data\"\n          >\n            <TextField\n              id=\"outlined-title-input\"\n              label=\"Title\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"title\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onTitleChange(e)}\n            />\n            <TextField\n              id=\"outlined-url-input\"\n              label=\"URL\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"url\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onUrlChange(e)}\n            />\n            <TextField\n              id=\"outlined-content-flexible\"\n              label=\"Content\"\n              multiline\n              rowsMax=\"6\"\n              //   value={this.state.multiline}\n              onChange={e => this.onContentChange(e)}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            {/* {this.state.image ? (\n              <div>\n                <img\n                  src={this.state.image}\n                  alt='for health tip post'\n                  className='tip_Image'\n                />\n              </div>\n            ) : null}\n            <label for='image_picker' className='imagePicker_Button'>\n              <span className='imagePicker_Text'>SELECT IMAGE</span>\n            </label>\n            <input\n              ref={input => (this.inputElement = input)}\n              type='file'\n              onChange={e => this.onImageChange(e)}\n              // onChange={this.onImageChange.bind(this)}\n              className='filetype'\n              id='image_picker'\n            /> */}\n            <button onClick={this.onSubmit} type=\"button\" class=\"submitButton\">\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nAddTip.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createTip: tip => {\n      dispatch(UserStore.createTip(tip));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(AddTip));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 10\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: \"bold\",\n    textDecoration: \"underline\"\n  }\n});\n\nfunction TipsExpansionPanel(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{props.title}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Site: <a href={props.url}>{props.url}</a>\n          </Typography>\n        </ExpansionPanelDetails>\n        <ExpansionPanelDetails>\n          <Typography>{props.content}</Typography>\n          {props.delete ? (\n            <DeleteSharpIcon onClick={props.delete} />\n          ) : \n          null}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nTipsExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TipsExpansionPanel);\n","import React, { Component } from \"react\";\nimport \"./Tips.css\";\nimport {connect} from 'react-redux';\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport Button from '@material-ui/core/Button';\nimport TipsExpansionPanel from \"../../components/UI/TipsExpansionPanel\";\nimport { stat } from \"fs\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass ViewTips extends Component {\n  constructor() {\n    super()\n    this.state = {\n      healthTips: null\n    }\n  }\n\n  deleteTip = (id) => {\n    this.props.deleteTip(id);\n  }\n  render() {\n    return (\n      <PaperSheet>\n        {this.props.userType === \"EM\" ? \n          <Link to={'/add_tip'} className=\"addTip_Button\"><Button variant=\"contained\" color=\"primary\">Add Tip</Button></Link>\n         : null}\n        <div className='ViewResultsContainer'>\n          {this.props.health_tips ? this.props.health_tips.map(tip => (\n            <TipsExpansionPanel title={tip.title} url={tip.url} content={tip.content} delete={this.props.userType === \"EM\" ? () => this.deleteTip(tip) : null} className=\"resultPanel\" />\n          )) : <h2>No Tips Posted Yet!</h2>}\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.userType,\n    health_tips: state.healthTips\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTip: (id) => {\n      dispatch(UserStore.deleteTip(id));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewTips);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Results.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport history from \"../../history\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass AddResults extends React.Component {\n  state = {\n    id: null,\n    firstName: \"\",\n    lastName: \"\",\n    doctorName: null,\n    heartRate: \"\",\n    bloodPressure: \"\",\n    bodyWeight: \"\"\n  };\n\n  componentWillMount() {\n    const cookies = new Cookies();\n    if (!cookies.get('token')) {\n      history.push('/login')\n    }\n  }\n\n  componentDidMount = () => [\n    this.props.location.state\n      ? this.setState({\n        id: this.props.location.state.patientId,\n        firstName: this.props.location.state.firstName,\n        lastName: this.props.location.state.lastName,\n        doctorName: this.props.location.state.doctorName\n      })\n      : null\n  ];\n\n  onEmailChange = event => {\n    this.setState({\n      email: event.target.value\n    });\n  };\n  onFirstNameChange = event => {\n    this.setState({\n      firstName: event.target.value\n    });\n  };\n  onLastNameChange = event => {\n    this.setState({\n      lastName: event.target.value\n    });\n  };\n  onDoctorNameChange = event => {\n    this.setState({\n      doctorName: event.target.value\n    });\n  };\n  onHeartRateChange = event => {\n    this.setState({\n      heartRate: event.target.value\n    });\n  };\n  onBloodPressureChange = event => {\n    this.setState({\n      bloodPressure: event.target.value\n    });\n  };\n  onBodyWeightChange = event => {\n    this.setState({\n      bodyWeight: event.target.value\n    });\n  };\n\n  onSubmit = event => {\n    const newResults = [\n      { label: \"Heart Rate\", value: this.state.heartRate },\n      { label: \"Blood Pressure\", value: this.state.bloodPressure },\n      { label: \"Body Weight\", value: this.state.bodyWeight }\n    ];\n    this.props.addResults(this.state.id, newResults);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <PaperSheet>\n        <div>\n          <h1 className=\"resultsTitle\">Add New Results</h1>\n          <hr />\n          <form className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"outlined-firstName-input\"\n              label=\"First Name\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"firstName\"\n              autoComplete=\"name\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              value={this.state.firstName}\n              onChange={e => this.onFirstNameChange(e)}\n            />\n            <TextField\n              id=\"outlined-lastName-input\"\n              label=\"Last Name\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"lastName\"\n              autoComplete=\"name\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              value={this.state.lastName}\n              onChange={e => this.onLastNameChange(e)}\n            />\n            <TextField\n              id=\"outlined-doctorName-input\"\n              label=\"Doctor's Name\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"doctorName\"\n              autoComplete=\"name\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onDoctorNameChange(e)}\n            />\n            <TextField\n              id=\"outlined-heartRate-input\"\n              label=\"Heart Rate\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"heartRate\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onHeartRateChange(e)}\n            />\n            <TextField\n              id=\"outlined-bloodPressure-input\"\n              label=\"Blood Pressure\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"bloodPressure\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onBloodPressureChange(e)}\n            />\n            <TextField\n              id=\"outlined-bodyWeight-input\"\n              label=\"Body Weights\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"bodyWeight\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onBodyWeightChange(e)}\n            />\n            <button onClick={this.onSubmit} type=\"button\" class=\"submitButton\">\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nAddResults.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    userType: state.userType,\n    shouldRedirect: state.shouldRedirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addResults: (id, results) => {\n      dispatch(UserStore.addResults(id, results));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(AddResults));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: 10\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: 'bold',\n    textDecoration: 'underline'\n  },\n});\n\nfunction SimpleExpansionPanel(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{props.title}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            {props.value}\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nSimpleExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleExpansionPanel);","import React, { Component } from \"react\";\nimport \"./Results.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport SimpleExpansionPanel from \"../../components/UI/ExpansionPanel\";\nimport Cookies from 'universal-cookie';\nimport history from \"../../history\";\n\nclass ViewResults extends Component {\n  componentWillMount() {\n    const cookies = new Cookies();\n    if (!cookies.get('token')) {\n      history.push('/login')\n    }\n    if (this.props.location.state) {\n      this.props.getPatient(this.props.location.state.patientId);\n    }\n  }\n\n  componentDidMount = () => {\n    if (this.props.location.state) {\n    }\n  };\n\n  render() {\n    return (\n      <PaperSheet>\n        {this.props.patient_stats ? (\n          <React.Fragment>\n            <h3>\n              {this.props.location.state.firstName}{\" \"}\n              {this.props.location.state.lastName} Results\n            </h3>\n            <div className=\"ViewResultsContainer\">\n              {this.props.location.state ? (\n                this.props.patient_stats.map(result => (\n                  <SimpleExpansionPanel\n                    title={result.label}\n                    value={result.value}\n                    className=\"resultPanel\"\n                  />\n                ))\n              ) : (\n                  <h2>No Previous Results</h2>\n                )}\n            </div>\n          </React.Fragment>\n        ) : null}\n      </PaperSheet>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    patients: state.patientList,\n    patient_stats: state.loadedResults\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPatient: (id, results) => {\n      dispatch(UserStore.getPatient(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewResults);\n","import React, { Component } from \"react\";\nimport \"./Results.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport history from \"../../history\";\n\nclass PatientList extends Component {\n  componentWillMount() {\n    const cookies = new Cookies();\n    if (!cookies.get('token')) {\n      history.push('/login')\n    }\n  }\n\n  render() {\n    return (\n      <PaperSheet>\n        <div className=\"ViewResultsContainer\">\n          <table className=\"patientTable\">\n            <tr>\n              <td className=\"patientName_Header\">Patient Name</td>\n              <td></td>\n              <td></td>\n            </tr>\n            {this.props.patients.map(patient => (\n              <tr>\n                <td>\n                  {patient.firstName} {patient.lastName}\n                </td>\n                <td>\n                  <Link\n                    to={{\n                      pathname: \"/view_results\",\n                      state: {\n                        patientId: patient._id,\n                        firstName: patient.firstName,\n                        lastName: patient.lastName\n                      }\n                    }}\n                    className=\"patientListButton\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\"patientListButton\"\n                    >\n                      View Results\n                    </Button>\n                  </Link>\n                </td>\n                <td>\n                  <Link\n                    to={{\n                      pathname: \"/add_results\",\n                      state: {\n                        patientId: patient._id,\n                        firstName: patient.firstName,\n                        lastName: patient.lastName,\n                        doctorName: patient.doctorName\n                      }\n                    }}\n                    className=\"patientListButton\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\"patientListButton\"\n                    >\n                      Add Results\n                    </Button>\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </table>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    patients: state.patientList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPatients: () => {\n      dispatch(UserStore.getPatients());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: theme.spacing.unit,\n    width: 200\n  }\n});\n\nfunction Chips(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <Chip\n        label={props.label}\n        onClick={props.click}\n        className={classes.chip}\n        // variant=\"outlined\"\n        color={props.color}\n        icon={props.selected}\n      />\n    </div>\n  );\n}\n\nChips.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Chips);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 10\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: \"bold\",\n    textDecoration: \"underline\"\n  }\n});\n\nfunction ConditionExpansion(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{props.name}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <b>Desctiption:</b> {props.desc}\n          </Typography>\n        </ExpansionPanelDetails>\n        <ExpansionPanelDetails>\n          <Typography>\n            <b>Treatmeant:</b> {props.treatment}\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nConditionExpansion.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ConditionExpansion);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Symptoms.css\";\nimport { connect } from 'react-redux';\nimport UserStore from \"../../store/user/UserStore\";\nimport Chips from '../../components/UI/Chips';\nimport PaperSheet from \"../../components/UI/Paper\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport ConditionExpansion from '../../components/UI/ConditionExpansion';\nimport Cookies from 'universal-cookie';\nimport history from \"../../history\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass Symptoms extends React.Component {\n  state = {\n    headache: false,\n    fever: false,\n    abdominal: false,\n    back: false,\n    rash: false,\n    cramps: false\n  };\n\n  componentWillMount() {\n    const cookies = new Cookies();\n    if (!cookies.get('token')) {\n      history.push('/login')\n    }\n  }\n\n  componentDidUpdate() {\n  }\n\n  handleHeadAche = () => {\n    this.setState(prevState => ({ headache: !prevState.headache }));\n  }\n  handleFever = () => {\n    this.setState(prevState => ({ fever: !prevState.fever }));\n  }\n  handleAbdominal = () => {\n    this.setState(prevState => ({ abdominal: !prevState.abdominal }));\n  }\n  handleBack = () => {\n    this.setState(prevState => ({ back: !prevState.back }));\n  }\n  handleRash = () => {\n    this.setState(prevState => ({ rash: !prevState.rash }));\n  }\n  handleCramps = () => {\n    this.setState(prevState => ({ cramps: !prevState.cramps }));\n  }\n\n  onSubmit = event => {\n    const newCheck = [];\n    if (this.state.headache) {\n      newCheck.push('headache');\n    }\n    if (this.state.fever) {\n      newCheck.push('fever');\n    }\n    if (this.state.abdominal) {\n      newCheck.push('abdominal');\n    }\n    if (this.state.back) {\n      newCheck.push('back');\n    }\n    if (this.state.rash) {\n      newCheck.push('rash');\n    }\n    if (this.state.cramps) {\n      newCheck.push('cramps');\n    }\n\n    this.props.getConditions(newCheck);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <PaperSheet className='symptomCard'>\n        <div className='symptomContainer'>\n          <h1 className='symptomTitle'>Symptom Checker</h1>\n          <h5>Please select all symptoms that apply</h5>\n          <hr />\n          <Chips label=\"Headache\" click={() => this.handleHeadAche()} color={this.state.headache ? 'primary' : 'secondary'} selected={this.state.headache ? <DoneIcon /> : null} />\n          <Chips label=\"Fever\" click={() => this.handleFever()} color={this.state.fever ? 'primary' : 'secondary'} selected={this.state.fever ? <DoneIcon /> : null} />\n          <Chips label=\"Abdominal Pain\" click={() => this.handleAbdominal()} color={this.state.abdominal ? 'primary' : 'secondary'} selected={this.state.abdominal ? <DoneIcon /> : null} />\n          <Chips label=\"Back Pain\" click={() => this.handleBack()} color={this.state.back ? 'primary' : 'secondary'} selected={this.state.back ? <DoneIcon /> : null} />\n          <Chips label=\"Rash\" click={() => this.handleRash()} color={this.state.rash ? 'primary' : 'secondary'} selected={this.state.rash ? <DoneIcon /> : null} />\n          <Chips label=\"Cramps\" click={() => this.handleCramps()} color={this.state.cramps ? 'primary' : 'secondary'} selected={this.state.cramps ? <DoneIcon /> : null} />\n          <hr />\n          <button onClick={this.onSubmit} type='button' class='submitButton'>\n            SUBMIT\n            </button>\n        </div>\n        <div className=\"conditionsContainer\">\n          <hr />\n          {this.props.conditions ? this.props.conditions.map(condition => (\n            <ConditionExpansion name={condition.name} symptoms={condition.symptoms} desc={condition.description} treatment={condition.treatment} />\n          )) : null}\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nSymptoms.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    conditions: state.conditions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getConditions: (symptoms) => {\n      dispatch(UserStore.getConditions(symptoms));\n    },\n  };\n};\n\n// export default withStyles(styles)(PatientLogin);\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Symptoms));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass ReplyCard extends Component {\n  state = {\n    post: this.props.post,\n    replyMessage: []\n  };\n\n  onReplyChange = event => {\n    this.setState({\n      replyMessage: event.target.value\n    });\n  };\n\n  onSubmit = () => {\n    const userName = this.props.user.firstName + \" \" + this.props.user.lastName;\n    const newPost = this.state.post;\n    if (newPost.replies) {\n      newPost.replies.push({\n        user: userName,\n        replyMessage: this.state.replyMessage\n      });\n    } else {\n      newPost.replies = [this.state.replyMessage];\n    }\n\n    this.props.addReply(newPost, this.props.user);\n  };\n\n  addReplyHandler = () => {};\n  render() {\n    return (\n      <Card\n        style={{ marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"95%\" }}\n      >\n        <CardContent>\n          <TextField\n            id=\"outlined-content-flexible\"\n            label=\"Post Message\"\n            multiline\n            rowsMax=\"6\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => this.onReplyChange(e)}\n          />\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" size=\"small\" onClick={this.onSubmit}>\n            Submit Reply\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nReplyCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReply: (post, user) => {\n      dispatch(UserStore.addReply(post, user));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ReplyCard));\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Button from \"@material-ui/core/Button\";\nimport ReplyCard from \"../UI/ReplyCard\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 10\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: \"bold\",\n    textDecoration: \"underline\"\n  }\n});\n\nfunction PostExpansionPanel(props) {\n  const { classes } = props;\n  const [replyClicked, setReplyClicked] = useState(false);\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>\n            <span className={classes.heading}>{props.post.title}</span> - (\n            {props.post.creatorName})\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>{props.post.content}</Typography>\n          {props.img ? <img src={props.img} alt=\"post img\" /> : null}\n        </ExpansionPanelDetails>\n        {props.post.replies && props.post.replies.length >= 1 ? (\n          <React.Fragment>\n            <ExpansionPanelDetails>\n              <Typography\n                style={{\n                  fontWeight: \"bold\",\n                  width: \"100%\",\n                  borderBottomWidth: 1,\n                  borderBottomColor: \"black\"\n                }}\n              >\n                REPLIES ({props.post.replies.length})\n              </Typography>\n            </ExpansionPanelDetails>\n            <ExpansionPanelDetails>\n              {props.post.replies.map(reply => {\n                return (\n                  <Typography>\n                    {reply.replyMessage} - ({reply.user})\n                  </Typography>\n                );\n              })}\n            </ExpansionPanelDetails>\n          </React.Fragment>\n        ) : null}\n        {replyClicked ? <ReplyCard post={props.post} /> : null}}\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => setReplyClicked(!replyClicked)}\n          >\n            {replyClicked ? (\n              <span style={{ color: \"red\" }}>CANCEL</span>\n            ) : (\n              <span>REPLY</span>\n            )}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nPostExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PostExpansionPanel);\n","import React, { Component } from \"react\";\nimport \"./DiscussionBoard.css\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport PostExpansionPanel from \"../../components/UI/PostExpansionPanel\";\nimport Cookies from 'universal-cookie';\nimport history from \"../../history\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass DiscussionBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: null\n    };\n  }\n\n  componentWillMount() {\n    const cookies = new Cookies();\n    if (!cookies.get('token')) {\n      history.push('/login')\n    }\n  }\n\n  deletePost = id => {\n    this.props.deleteTip(id);\n  };\n  render() {\n    return (\n      <PaperSheet>\n        {/* TODO: USE THIS FOR REDIRECT ON ALL PAGES IF NOT LOGGED IN */}\n        {this.props.userType === \"EM\" ? (\n          <Link to={\"/add_tip\"} className=\"addTip_Button\">\n            <Button variant=\"contained\" color=\"primary\">\n              Add Tip\n            </Button>\n          </Link>\n        ) : null}\n        <Link\n          to={\"/patient/discussion_board/create\"}\n          className=\"CreatePost_Button\"\n        >\n          <Button variant=\"contained\" color=\"primary\">\n            Create New Post\n          </Button>\n        </Link>\n        <div className=\"PostListContainer\">\n          {this.props.posts ? (\n            this.props.posts.map(post => (\n              <PostExpansionPanel\n                post={post}\n                delete={\n                  this.props.userId === post.creatorId\n                    ? () => this.deletePost(post)\n                    : null\n                }\n                className=\"resultPanel\"\n              />\n            ))\n          ) : (\n              <h2>No Posts Yet!</h2>\n            )}\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.userType,\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTip: id => {\n      dispatch(UserStore.deleteTip(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscussionBoard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./DiscussionBoard.css\";\nimport PaperSheet from \"../../components/UI/Paper\";\nimport { connect } from \"react-redux\";\nimport UserStore from \"../../store/user/UserStore\";\nimport Jimp from \"jimp\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass CreatePost extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n    image: null,\n    creatorId: \"\",\n    creatorName: this.props.firstName + \" \" + this.props.lastName,\n    imagePath: null,\n    replies: []\n  };\n\n  onTitleChange = event => {\n    this.setState({\n      title: event.target.value\n    });\n  };\n\n  onContentChange = event => {\n    this.setState({\n      content: event.target.value\n    });\n  };\n\n  onImageChange = event => {\n    event.persist();\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.onload = e => {\n        var imageBlob = new Blob([event.target.files[0]], {\n          type: event.target.files[0].type\n        });\n        var src = URL.createObjectURL(imageBlob);\n        Jimp.read(src, (err, image) => {\n          return image.resize(256, 256).quality(60);\n        });\n        this.setState({ image: e.target.result });\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  onImageChange2 = () => {\n    this.inputElement.click();\n  };\n\n  onSubmit = () => {\n    const newPost = {\n      title: this.state.title,\n      content: this.state.content,\n      image: this.state.image,\n      userId: this.props.user.userId,\n      creatorName: this.props.user.firstName + \" \" + this.props.user.lastName,\n      replies: []\n    };\n    this.props.createPost(newPost, this.props.user);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <PaperSheet>\n        <div>\n          <h1 className=\"addTipTitle\">Create New Post</h1>\n          <hr />\n          <form\n            className={classes.container}\n            noValidate\n            autoComplete=\"off\"\n            enctype=\"multipart/form-data\"\n          >\n            <TextField\n              id=\"outlined-title-input\"\n              label=\"Title\"\n              className={classes.textField}\n              type=\"text\"\n              name=\"title\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={e => this.onTitleChange(e)}\n            />\n            <TextField\n              id=\"outlined-content-flexible\"\n              label=\"Post Message\"\n              multiline\n              rowsMax=\"6\"\n              onChange={e => this.onContentChange(e)}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            {this.state.image ? (\n              <div>\n                <img\n                  src={this.state.image}\n                  alt=\"for health tip post\"\n                  className=\"tip_Image\"\n                />\n              </div>\n            ) : null}\n            <label for=\"image_picker\" className=\"imagePicker_Button\">\n              <span className=\"imagePicker_Text\">SELECT IMAGE</span>\n            </label>\n            <input\n              ref={input => (this.inputElement = input)}\n              type=\"file\"\n              onChange={e => this.onImageChange(e)}\n              className=\"filetype\"\n              id=\"image_picker\"\n            />\n            <button onClick={this.onSubmit} type=\"button\" class=\"submitButton\">\n              SUBMIT\n            </button>\n          </form>\n        </div>\n      </PaperSheet>\n    );\n  }\n}\n\nCreatePost.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPost: (post, user) => {\n      dispatch(UserStore.createPost(post, user));\n    },\n    getPosts: () => {\n      dispatch(UserStore.getPosts());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(CreatePost));\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\n// TEST COMMENT\nimport LoginTabs from \"./components/Auth/Login/LoginTabs\";\nimport RegisterTabs from \"./components/Auth/Register/RegisterTabs\";\nimport Home from \"./views/Home/Home\";\n\nimport EmployeeLanding from \"./views/LandingPages/EmployeeLanding\";\nimport PatientLanding from \"./views/LandingPages/PatientLanding\";\nimport AddTip from \"./views/Tips/AddTip\";\nimport ViewTips from \"./views/Tips/ViewTips\";\nimport AddResults from \"./views/Results/AddResults\";\nimport ViewResults from \"./views/Results/ViewResults\";\nimport PatientList from \"./views/Results/PatientList\";\nimport Symptoms from \"./views/Symptoms/Symptoms\";\nimport DiscussionBoard from \"./views/DiscussionBoard/DiscussionBoard\";\nimport CreatePost from \"./views/DiscussionBoard/CreatePost\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\nimport history from \"./history\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={LoginTabs} />\n            <Route exact path=\"/register\" component={RegisterTabs} />\n            <Route exact path=\"/employee\" component={EmployeeLanding} />\n            <Route exact path=\"/patient\" component={PatientLanding} />\n            <Route\n              exact\n              path=\"/patient/discussion_board\"\n              component={DiscussionBoard}\n            />\n            <Route\n              exact\n              path=\"/patient/discussion_board/create\"\n              component={CreatePost}\n            />\n            <Route exact path=\"/patient_list\" component={PatientList} />\n            <Route exact path=\"/add_tip\" component={AddTip} />\n            <Route exact path=\"/health_tips\" component={ViewTips} />\n            <Route exact path=\"/add_results\" component={AddResults} />\n            <Route exact path=\"/view_results\" component={ViewResults} />\n            <Route exact path=\"/symptoms\" component={Symptoms} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"./action\";\n\nconst initState = {\n  user: {\n    isAuthenticated: false,\n    shouldRedirect: false,\n    user: null,\n    userType: null,\n    patientList: null,\n    healthTips: null,\n    posts: null,\n    loadedResults: null,\n    conditions: null\n  }\n};\n\nexport function user(state = initState, action) {\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      let userType = \"\";\n      if (action.user.data.designation) {\n        userType = \"EM\";\n      } else {\n        userType = \"PT\";\n      }\n      return {\n        ...state,\n        isAuthenticated: true,\n        shouldRedirect: true,\n        user: action.user.data,\n        userType: userType\n      };\n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        shouldRedirect: true,\n        user: null,\n        userType: null\n      };\n    case actionTypes.GETPATIENTS:\n      return {\n        ...state,\n        patientList: action.patients.data.patients\n      };\n    case actionTypes.GETPATIENT:\n      return {\n        ...state,\n        loadedResults: action.patient.data.healthData\n      };\n    case actionTypes.CREATETIP:\n      return {\n        ...state\n      };\n    case actionTypes.GETTIPS:\n      return {\n        ...state,\n        healthTips: action.tips.data.tips\n      };\n    case actionTypes.CREATEPOST:\n      return {\n        ...state\n      };\n    case actionTypes.ADDREPLY:\n      return {\n        ...state\n      };\n    case actionTypes.GETPOSTS:\n      return {\n        ...state,\n        posts: action.posts.data.posts\n      };\n    case actionTypes.DELETETIP:\n      state.healthTips.splice(state.healthTips.indexOf(action.tip), 1);\n      return {\n        ...state,\n        healthTips: state.healthTips\n      };\n    case actionTypes.GETCONDITIONS:\n      return {\n        ...state,\n        conditions: action.conditions.data.conditions\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \".//App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { user } from \"./store/user/reducer\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  user,\n  composeEnhancer(applyMiddleware(thunkMiddleware))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}